<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CocoaPods</title>
    <url>/2020/06/08/CocoaPods/</url>
    <content><![CDATA[<h1 id="CocoaPods"><a href="#CocoaPods" class="headerlink" title="CocoaPods"></a>CocoaPods</h1><p><a href="https://gems.ruby-china.com" target="_blank" rel="noopener">RubyGems - Ruby China</a></p>
<h2 id="pod-setup-失败"><a href="#pod-setup-失败" class="headerlink" title="pod setup 失败"></a><code>pod setup</code> 失败</h2><p>pod setup的本质就是将<a href="https://github.com/CocoaPods/Specs上的Specs项目clone到/Users/用户名/.cocoapods/repos目录下。若此目录下已有Specs项目，则会将项目更新到最新的状态。由于Specs很大，容易导致pod" target="_blank" rel="noopener">https://github.com/CocoaPods/Specs上的Specs项目clone到/Users/用户名/.cocoapods/repos目录下。若此目录下已有Specs项目，则会将项目更新到最新的状态。由于Specs很大，容易导致pod</a> setup失败。</p>
<ol>
<li>使用 Git 客户端，比如 SourceTree, 然后 clone Specs:<a href="https://github.com/CocoaPods/Specs" target="_blank" rel="noopener">https://github.com/CocoaPods/Specs</a> 项目。</li>
<li>将 clone 的 Specs 项目的文件夹改名为 <code>master</code>，然后拖到 <code>~/.cocoapods/repos/</code> 目录下。</li>
<li>运行 <code>pod setup</code></li>
</ol>
<h2 id="pod-install-报错-RPC-failed"><a href="#pod-install-报错-RPC-failed" class="headerlink" title="pod install 报错: RPC failed;"></a><code>pod install</code> 报错: RPC failed;</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">error: RPC failed; curl 18 transfer closed with outstanding read data remaining</span><br><span class="line">fatal: the remote end hung up unexpectedly</span><br><span class="line">fatal: early EOF</span><br></pre></td></tr></table></figure>
<p>错误原因分析</p>
<p>git 有两种拉代码的方式，一个是 HTTP，另一个是 ssh。git 的 HTTP 底层是通过 curl 的。HTTP 底层基于 TCP，而 TCP 协议的实现是有缓冲区的。<br>所以这个报错大致意思就是说，连接已经关闭，但是此时有未处理完的数据。<br>解决方案</p>
<p>增大缓冲区大小。<br>切到 git 项目目录后，执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 524288000 的单位代表 B，524288000B 也就是 500MB。</span><br><span class="line">&#x2F;&#x2F; 这个值的大小，可自行酌情设置</span><br><span class="line">git config --global http.postBuffer 524288000</span><br></pre></td></tr></table></figure>
<p>然后查看是否设置成功：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config –list | grep postbuffer</span><br></pre></td></tr></table></figure>

<h2 id="运行报错：报错-Unable-to-load-contents-of-file-list"><a href="#运行报错：报错-Unable-to-load-contents-of-file-list" class="headerlink" title="运行报错：报错: Unable to load contents of file list"></a>运行报错：报错: Unable to load contents of file list</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Unable to load contents of file list: &#39;xxxx&#x2F;ProjectName&#x2F;Pods&#x2F;Target Support Files&#x2F;Pods-ProjectName&#x2F;Pods-ProjectName-frameworks-Debug-output-files.xcfilelist&#39; (in target &#39;ProjectName&#39;)</span><br></pre></td></tr></table></figure>

<p>这是由于cocoapods版本不符，建议升级到最新版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo gem install cocoapods --pre</span><br><span class="line"></span><br><span class="line">如果报错：You don&#39;t have write permissions for the &#x2F;usr&#x2F;bin directory.</span><br><span class="line"></span><br><span class="line">执行此命令即可：</span><br><span class="line">sudo gem install cocoapods -n &#x2F;usr&#x2F;local&#x2F;bin</span><br></pre></td></tr></table></figure>

<h1 id="CocoaPods创建库"><a href="#CocoaPods创建库" class="headerlink" title="CocoaPods创建库"></a>CocoaPods创建库</h1><ul>
<li><a href="https://guides.cocoapods.org" target="_blank" rel="noopener">CocoaPods Guides</a></li>
<li><a href="https://guides.cocoapods.org/syntax/podspec.html" target="_blank" rel="noopener">Podspec Syntax Reference</a></li>
</ul>
<h1 id="创建公开库"><a href="#创建公开库" class="headerlink" title="创建公开库"></a>创建公开库</h1><h2 id="1-注册Trunk"><a href="#1-注册Trunk" class="headerlink" title="1. 注册Trunk"></a>1. 注册Trunk</h2><p>Trunk需要CocoaPods 0.33版本以上，用<code>pod --version</code></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ pod --version</span><br><span class="line"><span class="number">1.5</span>.<span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>如果版本低，需要升级：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ sudo gen install cocoapods</span><br><span class="line">$ pod setup</span><br></pre></td></tr></table></figure>

<p>查看自己是否注册过Trunk</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">pod trunk me</span><br></pre></td></tr></table></figure>

<p>如果没有注册则显示</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ pod --version</span><br><span class="line">[!] You need to register a session first.</span><br></pre></td></tr></table></figure>

<p>如果已经注册则显示</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ pod trunk me</span><br><span class="line">  - <span class="symbol">Name:</span>     lightank  &lt;-------- 用户名/user name</span><br><span class="line">  - <span class="symbol">Email:</span>    <span class="number">1303908401</span>@qq.com</span><br><span class="line">  - <span class="symbol">Since:</span>    September <span class="number">6</span>th, <span class="number">20</span><span class="symbol">:</span><span class="number">19</span></span><br><span class="line">  - <span class="symbol">Pods:</span></span><br><span class="line">    - LTPrivacyPermission &lt;-------- 已经有的公开库/ owned library</span><br></pre></td></tr></table></figure>

<p>注册</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">/<span class="regexp">/ 加上--verbose可以输出详细debug信息，方便出错时查看。</span></span><br><span class="line"><span class="regexp">$ pod trunk register your-email@163.com "user_name" --verbose</span></span><br><span class="line"><span class="regexp"> </span></span><br><span class="line"><span class="regexp">"user_name" 里面代表你的用户名，最好起一个好的名字</span></span><br><span class="line"><span class="regexp">your-email@163.com 代表你的邮箱</span></span><br></pre></td></tr></table></figure>

<p>注册完成之后会给你的邮箱发个邮件,进入邮箱邮件里面有个链接,需要点击确认一下</p>
<p>注册成功后可以再查看一下个人信息pod trunk me</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ pod trunk me</span><br><span class="line">  - <span class="symbol">Name:</span>     lightank  &lt;-------- 用户名/user name</span><br><span class="line">  - <span class="symbol">Email:</span>    <span class="number">1303908401</span>@qq.com</span><br><span class="line">  - <span class="symbol">Since:</span>    September <span class="number">6</span>th, <span class="number">20</span><span class="symbol">:</span><span class="number">19</span></span><br><span class="line">  - <span class="symbol">Pods:</span></span><br><span class="line">    - LTPrivacyPermission &lt;-------- 已经有的公开库/ owned library</span><br></pre></td></tr></table></figure>

<h2 id="2-创建一个Git项目"><a href="#2-创建一个Git项目" class="headerlink" title="2. 创建一个Git项目"></a>2. 创建一个Git项目</h2><ol>
<li><p>GitHub上创建一个项目，比如：<a href="https://github.com/lightank/LTPrivacyPermission" target="_blank" rel="noopener">LTPrivacyPermission</a></p>
<p><img src="https://github.com/lightank/iOS_notes/blob/master/Resource/cocoapods/cocoapods_create_repository.png" alt="cocoapods_create_repository"></p>
</li>
<li><p>将项目克隆下来,并添加公开库文件</p>
<p><img src="https://github.com/lightank/iOS_notes/blob/master/Resource/cocoapods/cocoapods_create_folder.png" alt=""></p>
</li>
</ol>
<h2 id="3-创建-podspec"><a href="#3-创建-podspec" class="headerlink" title="3. 创建.podspec"></a>3. 创建.podspec</h2><p>创建.podspec: cd 到你的项目下，执行如下命令</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">/<span class="regexp">/ 注 LTPrivacyPermission 这个是你框架的名称</span></span><br><span class="line"><span class="regexp">$ pod spec create LTPrivacyPermission</span></span><br></pre></td></tr></table></figure>

<h2 id="4-编辑-podspec文件"><a href="#4-编辑-podspec文件" class="headerlink" title="4. 编辑.podspec文件"></a>4. 编辑.podspec文件</h2><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">Pod::Spec.new <span class="keyword">do</span> <span class="params">|s|</span></span><br><span class="line">  s.name         = <span class="string">"LTPrivacyPermission"</span></span><br><span class="line">  s.version      = <span class="string">"0.0.1"</span></span><br><span class="line">  s.summary      = <span class="string">"LTPrivacyPermission is a library for accessing various system privacy permissions"</span></span><br><span class="line">  s.description  = &lt;&lt;-DESC</span><br><span class="line">  LTPrivacyPermission is a library <span class="keyword">for</span> accessing various system privacy permissions, you can use it <span class="keyword">for</span> more friendly access.</span><br><span class="line">                   DESC</span><br><span class="line"></span><br><span class="line">  s.homepage     = <span class="string">"https://github.com/lightank/LTPrivacyPermission"</span></span><br><span class="line">  s.license      = <span class="string">"MIT"</span></span><br><span class="line">  s.author       = &#123; <span class="string">"lightank"</span> =&gt; <span class="string">"1303908401@qq.com"</span> &#125;</span><br><span class="line">  s.platform     = <span class="symbol">:ios</span>, <span class="string">"8.0"</span></span><br><span class="line">  s.source       = &#123; <span class="symbol">:git</span> =&gt; <span class="string">"https://github.com/lightank/LTPrivacyPermission.git"</span>, <span class="symbol">:tag</span> =&gt; <span class="string">"<span class="subst">#&#123;s.version&#125;</span>"</span> &#125;</span><br><span class="line">  s.source_files = <span class="string">"LTPrivacyPermission/*.&#123;h,m&#125;"</span></span><br><span class="line">  s.requires_arc = <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>解释：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">s.name：名称，pod search 搜索的关键词,注意这里一定要和.podspec的名称一样,否则报错</span><br><span class="line">s.version：版本号</span><br><span class="line">s.summary：简介</span><br><span class="line">s.homepage：项目主页地址</span><br><span class="line">s.license：许可证</span><br><span class="line">s.author：作者，如果多位作者，则用逗号分隔，如下：</span><br><span class="line">    s.author       = &#123;</span><br><span class="line">                    <span class="string">"author1"</span> =&gt; <span class="string">"email1@163.com"</span>,</span><br><span class="line">                    <span class="string">"author2"</span> =&gt; <span class="string">"email2@163.com"</span>,</span><br><span class="line">                    <span class="string">"author1"</span> =&gt; <span class="string">"email3@163.com"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">s.social_media_url：作者社交地址，yykit的示例如下：</span><br><span class="line">    s.social_media_url = <span class="string">'http://blog.ibireme.com'</span></span><br><span class="line">s.platform：平台跟最低版本号，也可以如下写法：</span><br><span class="line">    s.ios.deployment_target = <span class="string">"7.0"</span></span><br><span class="line">    s.osx.deployment_target = <span class="string">"10.9"</span></span><br><span class="line">    s.watchos.deployment_target = <span class="string">"2.0"</span></span><br><span class="line">    s.tvos.deployment_target = <span class="string">"9.0"</span></span><br><span class="line">s.source：代码来源，跟版本号，示例如下：</span><br><span class="line">    /<span class="regexp">/ commit =&gt; "e65e8b2" 表示将这个Pod版本与Git仓库中某个commit绑定</span></span><br><span class="line"><span class="regexp">    s.source = &#123; :git =&gt; "https:/</span><span class="regexp">/github.com/lightank</span><span class="regexp">/LTPrivacyPermission.git", :commit =&gt; "e65e8b2" &#125;</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ tag =&gt; 0.0.1 表示将这个Pod版本与Git仓库中某个版本的comit绑定</span></span><br><span class="line"><span class="regexp">    s.source = &#123; :git =&gt; "https:/</span><span class="regexp">/github.com/lightank</span><span class="regexp">/LTPrivacyPermission.git", :commit =&gt; "e65e8b2", :tag =&gt; 0.0.1 &#125;</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ tag =&gt; s.version 表示将这个Pod版本与Git仓库中相同版本的comit绑定</span></span><br><span class="line"><span class="regexp">    s.source = &#123; :git =&gt; "https:/</span><span class="regexp">/github.com/lightank</span><span class="regexp">/LTPrivacyPermission.git", :tag =&gt; s.version &#125;</span></span><br><span class="line"><span class="regexp">s.source_files：需要包含的源文件，示例如下：</span></span><br><span class="line"><span class="regexp">    "LTPrivacyPermission/</span>*<span class="string">"</span></span><br><span class="line"><span class="string">    "</span>LTPrivacyPermission/*.&#123;h,m&#125;<span class="string">"</span></span><br><span class="line"><span class="string">    "</span>LTPrivacyPermission/**<span class="regexp">/*.&#123;h,m&#125;"</span></span><br><span class="line"><span class="regexp">s.requires_arc：是否支持ARC</span></span><br><span class="line"><span class="regexp">s.dependency：依赖库，不能依赖未发布的库，可以写多个依赖库</span></span><br><span class="line"><span class="regexp">s.public_header_files：公开的头文件</span></span><br><span class="line"><span class="regexp">s.private_header_files = 私有的头文件，示例如下：</span></span><br><span class="line"><span class="regexp">    s.private_header_files = "YTKNetwork/</span>YTKNetworkPrivate.h<span class="string">"</span></span><br><span class="line"><span class="string">non_arc_files：不需要rac的文件，示例如下：</span></span><br><span class="line"><span class="string">    non_arc_files = 'YYKit/Base/Foundation/NSObject+YYAddForARC.&#123;h,m&#125;', 'YYKit/Base/Foundation/NSThread+YYAdd.&#123;h,m&#125;'</span></span><br><span class="line"><span class="string">s.libraries：需要导入的tbd库，示例如下：</span></span><br><span class="line"><span class="string">    s.libraries = 'z', 'sqlite3'</span></span><br><span class="line"><span class="string">s.frameworks：依赖的系统库，示例如下：</span></span><br><span class="line"><span class="string">    s.frameworks = 'UIKit', 'CoreFoundation', 'CoreText'</span></span><br><span class="line"><span class="string">s.dependency：依赖库，不能依赖未发布的库，可以写多个依赖库，示例如下：</span></span><br><span class="line"><span class="string">    s.dependency = 'AFNetworking' , 'SDWebImage'</span></span><br><span class="line"><span class="string">s.resources: 资源文件</span></span><br><span class="line"><span class="string">s.ios.vendored_frameworks = 'YJKit/YJKit.framework' # 依赖的第三方/自己的framework</span></span><br><span class="line"><span class="string">s.vendored_libraries = 'Library/Classes/libWeChatSDK.a' #表示依赖第三方/自己的静态库（比如libWeChatSDK.a）</span></span><br><span class="line"><span class="string">#依赖的第三方的或者自己的静态库文件必须以lib为前缀进行命名，否则会出现找不到的情况，这一点非常重要</span></span><br></pre></td></tr></table></figure>

<p>如果前面没有选择创建这个<code>LICENSE</code>文件， 创建<code>LICENSE</code>(许可证/授权)文件,此文件必须要有，内容如下，只需要把前面的版权改一下就行了,后面的都一样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MIT License</span><br><span class="line"></span><br><span class="line">Copyright (c) 2018 lightank</span><br><span class="line"></span><br><span class="line">Permission is hereby granted, free of charge, to any person obtaining a copy</span><br><span class="line">of this software and associated documentation files (the &quot;Software&quot;), to deal</span><br><span class="line">in the Software without restriction, including without limitation the rights</span><br><span class="line">to use, copy, modify, merge, publish, distribute, sublicense, and&#x2F;or sell</span><br><span class="line">copies of the Software, and to permit persons to whom the Software is</span><br><span class="line">furnished to do so, subject to the following conditions:</span><br><span class="line"></span><br><span class="line">The above copyright notice and this permission notice shall be included in all</span><br><span class="line">copies or substantial portions of the Software.</span><br><span class="line"></span><br><span class="line">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span><br><span class="line">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span><br><span class="line">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span><br><span class="line">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span><br><span class="line">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span><br><span class="line">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span><br><span class="line">SOFTWARE.</span><br></pre></td></tr></table></figure>

<h2 id="5-上传到Git："><a href="#5-上传到Git：" class="headerlink" title="5. 上传到Git："></a>5. 上传到Git：</h2><p>将包含配置好的 .podspec, LICENSE 的项目提交 Git</p>
<h2 id="6-版本打tag："><a href="#6-版本打tag：" class="headerlink" title="6. 版本打tag："></a>6. 版本打tag：</h2><p>给指定提交版本打tag，如果版本是”0.0.1”，那么tag就为”0.0.1”，不用带”v”，不然会报错</p>
<p>个人推荐使用<a href="https://www.sourcetreeapp.com" target="_blank" rel="noopener">sourcetree</a>来打tag，管理git库等</p>
<h2 id="7-验证-podspec文件"><a href="#7-验证-podspec文件" class="headerlink" title="7. 验证.podspec文件"></a>7. 验证.podspec文件</h2><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">/<span class="regexp">/ --verbose 如果验证失败会报错误信息</span></span><br><span class="line"><span class="regexp">$ pod spec lint LTPrivacyPermission.podspec --verbose</span></span><br></pre></td></tr></table></figure>

<p>如果出现如下错误提示</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">Analyzed <span class="number">1</span> podspec.</span><br><span class="line">[!] The spec did <span class="keyword">not</span> pass validation, due to <span class="number">1</span> warning (but you can use <span class="string">`--allow-warnings`</span> to ignore it) <span class="keyword">and</span> all results apply only to public specs, but you can use <span class="string">`--private`</span> to ignore them <span class="keyword">if</span> linting the specification <span class="keyword">for</span> a private pod.</span><br></pre></td></tr></table></figure>

<p>使用下列命令来消除警告</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ pod lib lint --allow-warnings</span><br></pre></td></tr></table></figure>

<p>出现以下错误</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="symbol">xcrun:</span> <span class="symbol">error:</span> unable to find utility <span class="string">"simctl"</span>, <span class="keyword">not</span> a developer tool <span class="keyword">or</span> <span class="keyword">in</span> PATH</span><br></pre></td></tr></table></figure>
<p>去XCode设置里面，将Command line Tools设置一下，在Xcode&gt;preferences&gt;Locations里面，设置之后再运行终端即可</p>
<p>如果最后出现如下提示，则表示这个库通过了验证</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">LTPrivacyPermission passed validation</span><br></pre></td></tr></table></figure>

<h2 id="8-发布"><a href="#8-发布" class="headerlink" title="8. 发布"></a>8. 发布</h2><p>发布时会验证 Pod 的有效性，如果你在手动验证 Pod 时使用了 <code>--use-libraries</code> 或 <code>--allow-warnings</code> 等修饰符，那么发布的时候也应该使用相同的字段修饰，否则出现相同的报错。</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">/<span class="regexp">/ --use-libraries --allow-warnings</span></span><br><span class="line"><span class="regexp">$ pod trunk push LTPrivacyPermission.podspec</span></span><br></pre></td></tr></table></figure>

<p>出现这种情况就说明你发布成功了，等待人家审核就行了</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">Congrats</span><br><span class="line">LTPrivacyPermission (<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>) successfully published</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h2 id="9-验证仓库"><a href="#9-验证仓库" class="headerlink" title="9. 验证仓库"></a>9. 验证仓库</h2><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ pod search LTPrivacyPermission</span><br></pre></td></tr></table></figure>

<p>如果出现下面的错误</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">[!] Unable to find a pod with name, author summary, <span class="keyword">or</span> description matching <span class="string">`LTPrivacyPermission`</span></span><br></pre></td></tr></table></figure>

<p>删除缓存文件，重新生成</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ rm ~<span class="regexp">/Library/</span>Caches/CocoaPods/search_index.json</span><br><span class="line">$ pod setup</span><br></pre></td></tr></table></figure>

<p>如果还是不行，估计是在你的项目还在审核中，你可以通过其他辅助手段去验证；</p>
<ol>
<li>执行 pod trunk me 命令,看看有没有你的库</li>
<li>在<a href="https://cocoapods.org" target="_blank" rel="noopener">CocoaPods</a>中所搜一下（这个也有延时，如果搜索到就出现这样的结果,展示的是上一个集成库的搜索结果）</li>
</ol>
<p>共有库的创建这里就结束了</p>
<h1 id="创建私有库"><a href="#创建私有库" class="headerlink" title="创建私有库"></a>创建私有库</h1><ol>
<li><p>创建一个私有的项目（可以是公司自己的git管理工具、也可以是码云上的）</p>
<p> 创建方法同公共库的第2步</p>
</li>
<li><p>创建.podspec</p>
<p> 方法同公共库创建的第3步</p>
</li>
<li><p>编辑.podspec文件</p>
<p> 方法同公共库创建的第4步</p>
</li>
<li><p>上传到Git</p>
<p> 方法同公共库创建的第5步</p>
</li>
<li><p>打tag</p>
<p>方法同公共库创建的第6步</p>
</li>
<li><p>验证.podspec文件</p>
<p> 方法同公共库创建的第7步</p>
</li>
<li><p>添加一个私有库并和项目地址做绑定</p>
</li>
</ol>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">pod repo add ZYRunTimeCoT <span class="symbol">https:</span>/<span class="regexp">/github.com/zhangyqyx</span><span class="regexp">/ZYRunTimeCoT.git</span></span><br></pre></td></tr></table></figure>

<ol start="8">
<li>向私有的库里添加podspec文件</li>
</ol>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ pod repo push ZYRunTimeCoT ZYRunTimeCoT.podspec</span><br></pre></td></tr></table></figure>

<ol start="9">
<li>新建一个项目进行验证 </li>
</ol>
<p>xcode新建项目 在podfile中添加</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ pod <span class="string">'ZYRunTimeCoT'</span>, <span class="string">'~&gt; 0.0.1'</span></span><br></pre></td></tr></table></figure>


<p>如果提示 ‘unable to find a specification for’</p>
<p>需要在podfile文件中添加源地址</p>
<p>source ‘<a href="https://github.com/zhangyqyx/ZYRunTimeCoT.git&#39;" target="_blank" rel="noopener">https://github.com/zhangyqyx/ZYRunTimeCoT.git&#39;</a></p>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul>
<li><a href="http://www.code4app.com/blog-847095-1887.html" target="_blank" rel="noopener">CocoaPods创建自己的公开库、私有库</a></li>
<li><a href="http://qiubaiying.top/2017/03/08/CocoaPods公有仓库的创建/" target="_blank" rel="noopener">CocoaPods公有仓库的创建</a></li>
<li><a href="https://www.jianshu.com/p/0c640821b36f" target="_blank" rel="noopener">CocoaPods 私有仓库的创建（超详细）</a></li>
<li><a href="https://www.jianshu.com/p/9096a2eb2804" target="_blank" rel="noopener">使用cocoapods打包静态库(依赖私有库，开源库，私有库又包含静态库)</a></li>
</ul>
]]></content>
      <tags>
        <tag>CocoaPods</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS</title>
    <url>/2020/06/08/iOS/</url>
    <content><![CDATA[<h1 id="静态库、动态库"><a href="#静态库、动态库" class="headerlink" title="静态库、动态库"></a>静态库、动态库</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul>
<li><p>查看库支持的框架：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lipo -info framework下的二进制文件名字&#96;</span><br><span class="line"></span><br><span class="line">比如：</span><br><span class="line">lipo -info &#x2F;Users&#x2F;XXXX&#x2F;Desktop&#x2F;Demo.framework&#x2F;Demo</span><br><span class="line">其中 Demo 为库的名称,同时也是二进制文件的名称</span><br></pre></td></tr></table></figure>
</li>
<li><p>合并静态库和动态库；</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lipo -create 第一个framework下二进制文件的绝对路径 第二个framework下二进制文件的绝对路径 -output 最终的二进制文件路径</span><br><span class="line"></span><br><span class="line">比如：</span><br><span class="line">lipo -info &#x2F;Users&#x2F;XXXX&#x2F;Desktop&#x2F;Demo&#x2F;x86&#x2F;Demo.framework&#x2F;Demo &#x2F;Users&#x2F;XXXX&#x2F;Desktop&#x2F;Demo&#x2F;arm&#x2F;Demo.framework&#x2F;Demo -output &#x2F;Users&#x2F;XXXX&#x2F;Desktop&#x2F;Demo&#x2F;Demo</span><br><span class="line">其中 Demo 为库的名称,同时也是二进制文件的名称</span><br></pre></td></tr></table></figure>


</li>
</ul>
<h2 id="Framework"><a href="#Framework" class="headerlink" title="Framework"></a>Framework</h2><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><ul>
<li>静态库<ul>
<li>在引入此库的工程中要加other linker -ObjC -all_load</li>
</ul>
</li>
<li>动态库<ul>
<li>Target -&gt; Genearl -&gt; Embedded Binaries 中添加此库，不然会报 Reason: image not found</li>
</ul>
</li>
</ul>
<h3 id="打包脚本"><a href="#打包脚本" class="headerlink" title="打包脚本"></a>打包脚本</h3><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="meta"># Sets the target folders and the final framework product.</span></span><br><span class="line"><span class="meta"># 如果工程名称和Framework的Target名称不一样的话，要自定义FMKNAME</span></span><br><span class="line"><span class="meta"># 例如: FMK_NAME = <span class="meta-string">"MyFramework"</span></span></span><br><span class="line">FMK_NAME=$&#123;PROJECT_NAME&#125;</span><br><span class="line"><span class="meta"># Install dir will be the final output to the framework.</span></span><br><span class="line"><span class="meta"># The following line create it in the root folder of the current project.</span></span><br><span class="line">INSTALL_DIR=$&#123;SRCROOT&#125;/Products/$&#123;FMK_NAME&#125;.framework</span><br><span class="line"><span class="meta"># Working dir will be deleted after the framework creation.</span></span><br><span class="line"><span class="meta"># if use WORK_DIR, it will show error:</span></span><br><span class="line"><span class="meta"># fatal error: lipo: can't open input file: xxxxxxx (No such file or directory)</span></span><br><span class="line"><span class="meta"># so we use BUILD_ROOT instead of WORK_DIR</span></span><br><span class="line">WORK_DIR=build</span><br><span class="line">DEVICE_DIR=$&#123;BUILD_ROOT&#125;/$&#123;CONFIGURATION&#125;-iphoneos/$&#123;FMK_NAME&#125;.framework</span><br><span class="line">SIMULATOR_DIR=$&#123;BUILD_ROOT&#125;/$&#123;CONFIGURATION&#125;-iphonesimulator/$&#123;FMK_NAME&#125;.framework</span><br><span class="line"><span class="meta"># -configuration $&#123;CONFIGURATION&#125; <span class="meta-string">"Release"</span></span></span><br><span class="line"><span class="meta"># Clean and Building both architectures.</span></span><br><span class="line">xcodebuild -configuration <span class="string">"Release"</span> -target <span class="string">"$&#123;FMK_NAME&#125;"</span> -sdk iphoneos clean build</span><br><span class="line">xcodebuild -configuration <span class="string">"Release"</span> -target <span class="string">"$&#123;FMK_NAME&#125;"</span> -sdk iphonesimulator clean build</span><br><span class="line"><span class="meta"># Cleaning the oldest.</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">"$&#123;INSTALL_DIR&#125;"</span> ]</span><br><span class="line">then</span><br><span class="line">rm -rf <span class="string">"$&#123;INSTALL_DIR&#125;"</span></span><br><span class="line">fi</span><br><span class="line">mkdir -p <span class="string">"$&#123;INSTALL_DIR&#125;"</span></span><br><span class="line">cp -R <span class="string">"$&#123;DEVICE_DIR&#125;/"</span> <span class="string">"$&#123;INSTALL_DIR&#125;/"</span></span><br><span class="line">cp -R <span class="string">"$&#123;SIMULATOR_DIR&#125;/"</span> <span class="string">"$&#123;INSTALL_DIR&#125;/"</span></span><br><span class="line"><span class="meta"># Uses the Lipo Tool to merge both binary files (i386 + armv6/armv7) into one Universal final product.</span></span><br><span class="line">lipo -create <span class="string">"$&#123;DEVICE_DIR&#125;/$&#123;FMK_NAME&#125;"</span> <span class="string">"$&#123;SIMULATOR_DIR&#125;/$&#123;FMK_NAME&#125;"</span> -output <span class="string">"$&#123;INSTALL_DIR&#125;/$&#123;FMK_NAME&#125;"</span></span><br><span class="line"><span class="meta"># use BUILD_ROOT instead of WORK_DIR, no need to remove</span></span><br><span class="line"><span class="meta">#rm -r <span class="meta-string">"$&#123;WORK_DIR&#125;"</span></span></span><br><span class="line">open <span class="string">"$&#123;INSTALL_DIR&#125;"</span></span><br></pre></td></tr></table></figure>

<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://blog.csdn.net/iunion/article/details/79694467" target="_blank" rel="noopener">xcode9 Framework制作自动打包脚本自动build版本</a></li>
</ul>
<h1 id="URL-Scheme"><a href="#URL-Scheme" class="headerlink" title="URL Scheme"></a>URL Scheme</h1><h2 id="创建URL-Scheme"><a href="#创建URL-Scheme" class="headerlink" title="创建URL Scheme"></a>创建URL Scheme</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><ol>
<li>首先在<code>Info.plist</code>中添加一行,选择<code>URL types</code></li>
<li>在展开的<code>Item 0</code>中填写<code>URL identifier</code>,这个用来唯一标识用户自定义的<code>URL Schemes</code>，推荐使用域名的反转形式，如:<code>com.huanyu.li.universalApp.urlScheme</code></li>
<li>在<code>Item 0</code>中添加新的一行，选择<code>URL Schemes</code></li>
<li>展开<code>URL Schemes</code>，在<code>Item 0</code>中输入自定义的<code>Scheme</code>的名称。在这里只需要输入自定义的<code>Scheme</code>的名称即可，不需要加上:<code>//</code>，例如这里输入的是<code>universalApp</code>,那么对应的自定义的URL就是<code>universalApp://</code>，这里可以输入多个。</li>
</ol>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><ol>
<li><code>Open source</code>打开<code>Info.plist</code></li>
<li>在尾部添加下列内容</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>CFBundleURLTypes<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">key</span>&gt;</span>CFBundleURLName<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">string</span>&gt;</span>com.huanyu.li.universalApp.urlScheme<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">key</span>&gt;</span>CFBundleURLSchemes<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">string</span>&gt;</span>universalApp<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="使用URL-Scheme"><a href="#使用URL-Scheme" class="headerlink" title="使用URL Scheme"></a>使用URL Scheme</h2><h3 id="1-在Safari中使用"><a href="#1-在Safari中使用" class="headerlink" title="1. 在Safari中使用"></a>1. 在Safari中使用</h3><p>在Safari中直接在浏览器的地址栏中输入<code>universalApp://</code>,即可启动刚才的应用</p>
<h3 id="2-在其他的应用程序中使用"><a href="#2-在其他的应用程序中使用" class="headerlink" title="2. 在其他的应用程序中使用"></a>2. 在其他的应用程序中使用</h3><p>在需要调用的地方使用下面的代码即可实现调用</p>
<figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *customURL = <span class="string">@"universalApp://"</span>;</span><br><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] openURL:[<span class="built_in">NSURL</span> URLWithString:customURL]];</span><br></pre></td></tr></table></figure>
<h3 id="3-参数的传递"><a href="#3-参数的传递" class="headerlink" title="3. 参数的传递"></a>3. 参数的传递</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void)openOtherApp</span><br><span class="line">&#123;</span><br><span class="line">    NSString *customURL &#x3D; @&quot;universalApp:&#x2F;&#x2F;?token&#x3D;123&amp;order&#x3D;1&quot;;</span><br><span class="line">    [[UIApplication sharedApplication] openURL:[NSURL URLWithString:customURL]];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在<code>AppDelegate</code>中实现下面的两个方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url</span><br><span class="line">    </span><br><span class="line">- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation</span><br></pre></td></tr></table></figure>

<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AppDelegate:</span><br><span class="line">- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation</span><br><span class="line">&#123;</span><br><span class="line">    if ([sourceApplication isEqualToString:@&quot;com.huanyu.li.universalApp.urlScheme&quot;])</span><br><span class="line">    &#123;</span><br><span class="line">        NSLog(@&quot;调用的应用程序的Bundle ID是: %@&quot;, sourceApplication);</span><br><span class="line">        NSLog(@&quot;URL scheme:%@&quot;, [url scheme]);</span><br><span class="line">        NSLog(@&quot;URL query: %@&quot;, [url query]);</span><br><span class="line">        return YES;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        return NO;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>说明:</p>
<p>(1)上面的两个函数作用是一致的只是参数不同而已，函数的返回值是BOOL,如果为YES表示可以打开，NO表示不可以打开应用程序</p>
<p>(2)参数可以通过<code>[url query]</code>来获取，比如使用的是<code>universalApp://?token=123&amp;order=1</code>那么通过<code>[url query]</code>获取到的值是<code>token=123&amp;order=1</code>,然后可以通过这些数据再作相应的处理.</p>
<p>(3)调用的应用程序的<code>Bundle ID</code>可以通过<code>sourceApplication</code>参数获取</p>
<p>(4)通过<code>[url scheme]</code>可以获取到请求的<code>URL Scheme</code>，比如是通过<code>universalApp://</code>打开的那么<code>[url scheme]</code>的值就是<code>universalApp</code>。可以通过不同的参数来判断来源的合法性</p>
<h2 id="弊端"><a href="#弊端" class="headerlink" title="弊端"></a>弊端</h2><h3 id="Schema无法判断是否安装App"><a href="#Schema无法判断是否安装App" class="headerlink" title="Schema无法判断是否安装App"></a>Schema无法判断是否安装App</h3><p>一定会有这样的产品需求的：</p>
<ul>
<li>如果已经安装App，则打开App</li>
<li>如果没有安装App，则前往下载App</li>
</ul>
<p>浏览器实际上是没有能力判断手机里是否安装了某个App的，，所以聪明的程序员们选择了讨巧的方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> appSchema = <span class="string">'schema://xxxx'</span>;</span><br><span class="line">    <span class="keyword">if</span> ($.os.ios) &#123;</span><br><span class="line">        location.href = openNALocation; <span class="comment">//location.href 打开schema</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">'body'</span>).append(<span class="string">'&lt;iframe src="'</span> + appSchema + <span class="string">'" style="display:none"&gt;&lt;/iframe&gt;'</span>); <span class="comment">//iFrame 打开 schema</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;<span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//延迟1000秒</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($.os.ios) &#123;</span><br><span class="line">        location.href = <span class="string">`https://itunes.apple.com/us/app/idxxxxxxx?mt=8`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        location.href = <span class="string">`https://xxx.xxx.xxx/xxx/xxx.apk`</span>;<span class="comment">//直接apk下载link</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;，<span class="number">1000</span>）</span><br></pre></td></tr></table></figure>

<ul>
<li>首先发起跳转Schema<ul>
<li>如果没安装App，会打开App失败，没效果</li>
<li>如果安装App，会成功打开App</li>
</ul>
</li>
<li>延迟1000ms<ul>
<li>如果没安装App，Schema打开失败，等1000秒后会自动跳转</li>
<li>如果安装App，App会打开，当前网页会被暂停，这延迟代码不会执行</li>
</ul>
</li>
</ul>
<p>聪明的人会发现，这样有个风险，如果用户打开APP成功后，又手动切回浏览器，那么延迟1000ms的代码依然会执行，安卓会跳出下载apk包得提示，iOS会又再度跳到Appstore，但这个瑕疵也不是太大的问题，所以这种做法被普遍采用，运用在各种安装就跳转，不安装就下载的用户场景。</p>
<h2 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://blog.devzeng.com/blog/ios-url-scheme.html" target="_blank" rel="noopener">iOS中的URL Scheme</a></li>
<li><a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/AppSearch/UniversalLinks.html" target="_blank" rel="noopener">Support Universal Links</a></li>
<li><a href="https://juejin.im/post/59aabe4c6fb9a0249471e04a" target="_blank" rel="noopener">Universal Link 前端部署采坑记</a></li>
</ul>
]]></content>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>unix 系統基本指令</title>
    <url>/2020/06/08/cmd/</url>
    <content><![CDATA[<h1 id="unix-系統基本指令"><a href="#unix-系統基本指令" class="headerlink" title="unix 系統基本指令"></a>unix 系統基本指令</h1><p>unix 系统基本指令<br>[控制键]: 首先要了解在下命令时一些控制键的用法 :</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl-U 删除整行命令行</span><br><span class="line">Ctrl-W 删除命令行的最后一个字(Word)</span><br><span class="line">Ctrl-C 中断程式或shell script</span><br><span class="line">Ctrl-Z 暂停程式或shell script</span><br><span class="line">Ctrl-S 暂停往下显示</span><br><span class="line">Ctrl-Q 继续往下显示</span><br><span class="line">Ctrl-O 不要程式的输出, 但不中断程式</span><br><span class="line">Ctrl-D 终止档案输入(EOF), 或Logout</span><br></pre></td></tr></table></figure>

<p>与档案目录有关的特殊字元</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">. 现在目录(一个句点)</span><br><span class="line">.. 上一层目录(两个句点)</span><br><span class="line">～ User 之主目录(老鼠尾巴)</span><br><span class="line">? 档名之单一字元(问号)</span><br><span class="line">* 档名之所有字元(星号)</span><br></pre></td></tr></table></figure>

<p>以下摘录 unix 较常用之命令, 其中也包含了部份csh 之 Built-in commnad :</p>
<p><strong>ls</strong> 显示目录内容,同DOS之DIR</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -al 详细显示此目录内的所有档案(包含以. 开头之隐藏档)</span><br><span class="line">ls *.c 显示此目录内的所有结尾为.c 的档案(unix 无所谓附档名)</span><br></pre></td></tr></table></figure>

<p>cd 切换目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd 切换目录至您的主目录</span><br><span class="line">cd .. 切换目录至上一层目录</span><br><span class="line">cd &#x2F;usr&#x2F;bin 切换目录至&#x2F;usr&#x2F;bin</span><br></pre></td></tr></table></figure>

<p>pwd 显示现在目录的路径</p>
<p>mkdir 建一子目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir prg 在现目录下建一子目录prg</span><br><span class="line">mkdir prg&#x2F;c 在子目录prg 下建一子目录 c</span><br></pre></td></tr></table></figure>

<p>rmdir 删除一子目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rmdir prg 删除子目录prg , 但prg 须为空目录</span><br></pre></td></tr></table></figure>

<p>file显示档案型态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file * 显示目录内所有的档案型态</span><br></pre></td></tr></table></figure>

<p>cp 拷贝档案</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;usr&#x2F;skel&#x2F;* . 将&#x2F;usr&#x2F;skel下的所有档案拷贝至现目录下, 不包括子目录</span><br><span class="line">及隐藏档cp -r &#x2F;usr&#x2F;demo . 将&#x2F;usar&#x2F;demo 下的档案及子目录拷贝至现目录下</span><br></pre></td></tr></table></figure>

<p>chmod 改变档案许可权</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod u+x main 将档案main 加上自己可执行的许可</span><br><span class="line">chmod 744 main 将档案main 变为自己可读写可执行, 别人只可读</span><br></pre></td></tr></table></figure>

<p>man 显示命令用法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">man find 显示 find 的使用说明</span><br><span class="line">man man 显示 man 这个指令的使用说明</span><br></pre></td></tr></table></figure>

<p>more 以页显示方式显示档案(参考less指令)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">more aa</span><br></pre></td></tr></table></figure>

<p>less 以页显示方式显示档案(参考more指令)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">less aa 直接分页查看aa 档案内容.</span><br><span class="line">cat aa | less 将aa 的档案内容整个pipe 给less 当作输入档案.</span><br><span class="line"></span><br><span class="line">注: 使用less 可以按PgUp&#x2F;PgDn 上下回卷内容, 按&#x2F; 可搜寻关键字.</span><br></pre></td></tr></table></figure>

<p>cat 显示档案或建立档案</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat aa 显示档案aa</span><br><span class="line">cat &gt;aa 由键盘输入建一档案aa, 结束按CTRL-Z 或CTRL-D</span><br></pre></td></tr></table></figure>

<p>rm 删除档案</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm abc 删除档案abc</span><br><span class="line">rm -rc 删除目录c 及其下之档案和子目录</span><br><span class="line">rm -rf c 同rm -rc , 但删除时将不再一一询问是否删除.</span><br></pre></td></tr></table></figure>

<p>mv 搬移档案</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mv * ..&#x2F;prg 将所有档案移至上层目录之子目录prg 下</span><br></pre></td></tr></table></figure>

<p>ps 显示系统运作状况</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps 显示您的Process</span><br><span class="line">ps -aux 较详细的显示系统内的所有Process(BSD 系列UNIX 系统)</span><br><span class="line">ps -ef 同ps -aux (SVR4 系列UNIX 系统适用.)</span><br></pre></td></tr></table></figure>

<p>jobs 显示在背景(background)执行,或暂停的process</p>
<p>bg 将现正在执行的process移至背景(background)执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl-Z 先将在执行的process 暂停</span><br><span class="line">bg 将此Job 移至background 执行</span><br></pre></td></tr></table></figure>

<p>fg 将现正在背景执行的process移至前景(foreground)执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fg %2 将Job2 移至foregroung 执行</span><br></pre></td></tr></table></figure>

<p>alias 将一命令定别名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alias dir &#39;ls -al&#39; 如此键入dir 即和ls -al 一样</span><br></pre></td></tr></table></figure>

<p>unalias取消某个别名之设定</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unalias dir</span><br></pre></td></tr></table></figure>

<p>write 送一个讯息给正在上线使用的User</p>
<p>wall 送一个讯息给正所有在上线使用的User</p>
<p>at 使一串指令在所指定的时间执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">at 6:00 tomorrow &lt; file1 在明天早晨6:00 开始执行批次档file1</span><br></pre></td></tr></table></figure>

<p>atq 显示有那些Job在Queue中</p>
<p>atrm 删除at_queue中的Job</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">atrm 124 删除queue 中的Job_number 124</span><br></pre></td></tr></table></figure>

<p>batch 使一串指令在Background执行(执行速度会较慢)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">batch &lt; file3 执行批次档file3</span><br></pre></td></tr></table></figure>

<p>history 显示前几次所键入的命令(预设是40个)</p>
<p>!! 重覆上一命令</p>
<p>passwd 更改密码</p>
<p>chfn 更改 full name</p>
<p>clear 清除终端机萤幕</p>
<p>date t显示日期(可以特殊日期格式显示)</p>
<p>df 显示磁碟使用量</p>
<p>du 显示目录下所使用的磁碟空间</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">du . 显示现目录下之各子目录使用Block 数</span><br><span class="line">du -s . 只显示现目录以下所使用的Block 总计</span><br></pre></td></tr></table></figure>

<p>env 显示目前所有的环境变数</p>
<p>setenv 指定变数值于shell中,供子shell使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setenv LD_LIBRARY_PATH &#x2F; usr &#x2F; openwin &#x2F; lib</span><br></pre></td></tr></table></figure>

<p>set 显示或定义变数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set term&#x3D;vt100</span><br></pre></td></tr></table></figure>

<p>unset 取消某个变数的定义</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unset term</span><br></pre></td></tr></table></figure>

<p>stty 设定终端机</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stty pass8 rows 24</span><br></pre></td></tr></table></figure>

<p>finger显示远端主机login状况</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">finger @dec2</span><br></pre></td></tr></table></figure>

<p>rehash 若有新的命令档存入path所指定的目录时,使hash table重建</p>
<p>head 显示档首(行、Block、字元)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">head -5 mbox 显示mbox 前五行, 若未指定预设是10 行</span><br></pre></td></tr></table></figure>

<p>tail 显示档尾(行、Block、字元)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tail -100 file1</span><br></pre></td></tr></table></figure>

<p>kill 删除process或job</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kill -9 1340 删除process 1340 , 必须是自已的process</span><br><span class="line">kill %1 删除第一个Job (background 或暂停)</span><br></pre></td></tr></table></figure>

<p>rcp 与远端主机间的档案拷贝</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rcp file1 mail:&#x2F;home&#x2F;user&#x2F;user1 将file1 拷贝至mail_host 的</span><br><span class="line">&#x2F; home &#x2F; user &#x2F; user1</span><br></pre></td></tr></table></figure>

<p>rsh执行远端主机的命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rsh sparc20 ls -al 执行sparc20 的命令</span><br></pre></td></tr></table></figure>

<p>rlogin Login至远端主机</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rlogin sparc14</span><br></pre></td></tr></table></figure>

<p>split 将大档案分割成数个小档案</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">split -100 big_file sf 将big_file 以每100行为一个档案写至</span><br><span class="line">sfaa sfab ...</span><br></pre></td></tr></table></figure>

<p>sort 排序档案内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sort file1 &gt; file2 将file1 由小到大排序至file2</span><br><span class="line">sort -t: +2 file3 &gt; file4 将file3 以: 作栏分界, 以第三栏排序至file4</span><br></pre></td></tr></table></figure>

<p>cut 挑出档案的部份栏资料</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cut -f1,5 -d. file1 &gt;file2 将file1 以. 作栏分界, 挑出第一、五栏写至file2</span><br></pre></td></tr></table></figure>

<p>source 执行 shell script file</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source .cshrc</span><br></pre></td></tr></table></figure>

<p>tar 产生或解开档案库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -cvf bin.tar .&#x2F;bin 将.&#x2F;bin 下之档案及其子目录制成一档案库bin.tar</span><br><span class="line">tar -xvf bin.tar 将档案库bin.tar 解开成</span><br><span class="line">tar -cvzf test.tgz .&#x2F;aaa 将.&#x2F;aaa 目录下所有档案使用gzip 方式压到test.tgz 档中.</span><br><span class="line">tar -xvzf test.tgz 将test.tgz 档中所有档案解压出来.</span><br></pre></td></tr></table></figure>

<p>umask 设定以后建立档案及目录的存取权利</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">umask 077 使其它User 皆无法读写执行您的档案及目录</span><br></pre></td></tr></table></figure>

<p>wc 计算档案长度</p>
<p>w 显示谁 Login 至本系统</p>
<p>find 找寻档案</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find . -atime +7 -print 找寻现目录下的所有子目录及档案, 其最后一次读取</span><br><span class="line">                         为7 天以上者</span><br><span class="line">find &#x2F;usr -name &quot;*.h&quot; -print 找寻&#x2F;usr下的所有子目录及档案, 其档名为</span><br><span class="line">                              .h结尾者</span><br></pre></td></tr></table></figure>

<p>uuencode 将二进位档以编码方式变成一ASCII档</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uuencode file_a file_b &gt;file_c 将file_a 编码并以file_b 为Label 写至</span><br><span class="line">                                file_c</span><br></pre></td></tr></table></figure>

<p>uudecode 将 uuencode 过的档案回复为原来的内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uudecode file_c 解码后的档案其档名为file_b</span><br></pre></td></tr></table></figure>

<p>compress将档案压缩以减少空间</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">compress file1 &gt;file1.Z</span><br></pre></td></tr></table></figure>

<p>uncompress 将压缩过的档案恢复</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uncompress file1.Z</span><br></pre></td></tr></table></figure>

<p>cmp 比较两个本文档或非本文档不同的地方</p>
<p>diff 比较两个本文档不同的地方</p>
<p>sh 开一个Bourne Shell命令解译器</p>
<p>grep 在本文档中找寻字串</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep &#39;how are you&#39; file1</span><br><span class="line">ps -aux |grep user1 找寻所有process 中有user1</span><br></pre></td></tr></table></figure>

<p>ln 连结档案或目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln file1 file2 将原先档案file1 连结一份至file2</span><br><span class="line">ln -s &#x2F;usr&#x2F;games games 将&#x2F;usr&#x2F;grams 连结成现目录下之子目录games</span><br></pre></td></tr></table></figure>

<p>bc 线上电子计算机.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bc 3*71 计算3 乘以71 ​​的结果.</span><br></pre></td></tr></table></figure>

<p>gzip 压缩软体GNU zip.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gzip aaa.tar 把aaa.tar 压成aaa.tar.gz</span><br><span class="line">gzip -d aaa.tar.gz 把aaa.tar.gz 解压成aaa.tar</span><br></pre></td></tr></table></figure>

<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul>
<li><a href="http://www2.thu.edu.tw/~cc/network_team/unix/command.htm" target="_blank" rel="noopener">unix 系统基本指令</a></li>
</ul>
]]></content>
      <tags>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>SVN</title>
    <url>/2020/06/08/SVN/</url>
    <content><![CDATA[<p>针对Cornerstone 3的 log 报错</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Could not contact repository to read the latest log entries.</span><br></pre></td></tr></table></figure>
<p>解决方式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">应用程序 → Cornerstone.app → 右键显示包内容 → Contents → 打开Info.plist → 复制 Bundle identifier 的值，比如 com.zennaware.cornerstone3 → Quit Cornerstone(退出cornerStone) → Open Terminal(打开终端) → 输入以下文字</span><br><span class="line">$: defaults delete com.zennaware.cornerstone3 HistoryCacheUsage</span><br><span class="line">注意中间的值请改成对应的info.plist中的值</span><br><span class="line"></span><br><span class="line">重启Cornerstone → 点击 log 弹出警告框</span><br><span class="line"></span><br><span class="line">Do you want to download and cache the repository&#39;s history?</span><br><span class="line"></span><br><span class="line">Never For This Repository     Not Now     Download</span><br><span class="line"></span><br><span class="line">切记一定要选择Not Now,不要默认选择的Download</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>SVN</tag>
      </tags>
  </entry>
  <entry>
    <title>Git</title>
    <url>/2020/06/08/Git/</url>
    <content><![CDATA[<h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 回滚到指定 commit</span><br><span class="line"></span><br><span class="line">查看提交历史：git log</span><br><span class="line">退出查看历史：q</span><br><span class="line">回滚指定commit：git reset --hard xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">本地覆盖远端：git push -f</span><br></pre></td></tr></table></figure>


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 刷新本地origin缓存</span><br><span class="line">$:git remote prune origin</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 设置代理</span><br><span class="line">我使用Shadowsocks代理，默认代理端口为1080，配置好代理之后去终端输入git配置命令，命令如下</span><br><span class="line"></span><br><span class="line">git config --global http.proxy socks5:&#x2F;&#x2F;127.0.0.1:1080</span><br><span class="line"></span><br><span class="line">上面的命令是给git设置全局代理，但是我们并不希望国内git库也走代理，而是只需要github上的代码库走代理，命令如下</span><br><span class="line"></span><br><span class="line">git config --global http.https:&#x2F;&#x2F;github.com.proxy socks5:&#x2F;&#x2F;127.0.0.1:1080</span><br><span class="line"></span><br><span class="line">ps：如果要恢复&#x2F;移除上面设置的git代理，使用如下命令</span><br><span class="line"></span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset http.https:&#x2F;&#x2F;github.com.proxy</span><br></pre></td></tr></table></figure>

<h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><ol>
<li><p>首先运行terminal检查是否已经有SSH Key</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ~&#x2F;.ssh		&#x2F;&#x2F; 进入ssh目录,如果不能进入该目录，说明没生成过</span><br><span class="line">ls		&#x2F;&#x2F; 查看ssh文件夹内容,如果ssh文件夹中有id_rsa、id_rsa.pub文件，说明之前生成过ssh秘钥，可以直接使用，跳过步骤2，直接进入步骤3</span><br><span class="line"></span><br><span class="line">git config --list    &#x2F;&#x2F; 检查下是否配置过git账户</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建一个SSH key</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure>
<p> 接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是github管理者的密码），</p>
<p> 当然，你也可以不输入密码，直接按回车。那么push的时候就不需要输入密码，直接提交到github上了，如：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line"># Enter same passphrase again:</span><br></pre></td></tr></table></figure>

<p> 当你看到下面这段代码，那就说明，你的 SSH key 已经创建成功，你只需要添加到github的SSH key上就可以了：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">our identification has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.</span><br><span class="line"># Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.</span><br><span class="line"># The key fingerprint is:</span><br><span class="line"># 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加公钥到你的远程仓库（github）</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 查看你生成的公钥，或者执行 pbcopy &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub 直接复制内容到粘贴板</span><br><span class="line">cat ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 把terminal上显示的内容copy出来</span><br><span class="line">ssh-rsa ******************省略一堆字串*********************************** your_email@example.com</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 登陆你的github帐户。点击你的头像，然后 Settings -&gt; 左栏点击 SSH and GPG keys -&gt; 点击 New SSH key</span><br><span class="line">&#x2F;&#x2F; 然后你复制上面的公钥内容，粘贴进“Key”文本域内。 title域，自己随便起个名字。</span><br><span class="line">&#x2F;&#x2F; 点击 Add key</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;完成以后，验证下这个key是不是正常工作，输入：</span><br><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line">如果第二步输入了密码就会让输入密码：</span><br><span class="line">Enter passphrase for key &#39;&#x2F;Users&#x2F;shutong&#x2F;.ssh&#x2F;id_rsa&#39;:</span><br><span class="line"></span><br><span class="line">如果，看到：</span><br><span class="line">Hi shu-tong! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line"></span><br><span class="line">成功.</span><br></pre></td></tr></table></figure>


</li>
</ol>
<ol start="3">
<li><p>重新配置</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.配置账户</span><br><span class="line">git config --global user.name &quot;your account name&quot;     -&gt;用户名，建议拼音或英文</span><br><span class="line">git config --global user.email &quot;your account email&quot;     -&gt;邮箱地址</span><br><span class="line"></span><br><span class="line">2.生成秘钥 </span><br><span class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;         -&gt;上面的邮箱地址</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h3 id="gitignore中增加了过滤规则但是不起作用"><a href="#gitignore中增加了过滤规则但是不起作用" class="headerlink" title=".gitignore中增加了过滤规则但是不起作用"></a><code>.gitignore</code>中增加了过滤规则但是不起作用</h3><p>是由于在创建<code>.gitignore</code>文件或添加一些过滤规则之前就track了相应的内容，那么即使在<code>.gitignore</code>文件中写入新的过滤规则，这些规则也不会起作用，Git仍然会对这些文件进行版本管理。简单来说出现这种问题的原因就是Git已经开始管理这些文件了，所以你无法再通过过滤规则过滤它们。 </p>
<p>解决方法就是先把本地这些文件变成未track状态，具体来说就是在缓存里删除它们，然后提交：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rm -r --cached .</span><br><span class="line">git add .</span><br><span class="line">git commit -m &#39;update .gitignore&#39;</span><br></pre></td></tr></table></figure>

<h3 id="解决mac下的Sourcetree每次拉取提交都需要输入密码"><a href="#解决mac下的Sourcetree每次拉取提交都需要输入密码" class="headerlink" title="解决mac下的Sourcetree每次拉取提交都需要输入密码"></a>解决mac下的Sourcetree每次拉取提交都需要输入密码</h3><p>sourceTree项目的GIT密码始终保存不到Mac的钥匙串中,明明在钥匙串中是存在的.但是在使用sourceTree pull/push代码的时候还是需要再输入密码,很是繁琐.</p>
<p>于是,网上搜索了一下,说的在https模式下,Mac需要使用osxkeychain凭据助手,并在Git中设置使用. 并且如果已经安装了 brew 的应该会自带了 osxkeychain .但是奇怪的是,我安装了brew的,使用brew安装应用也没有问题.那就只能手动的再设置一次了.</p>
<p>方法</p>
<ol>
<li><p>先使用命令下载 <code>git-credential-osxkeychain</code>：</p>
<p> <code>curl http://github-media-downloads.s3.amazonaws.com/osx/git-credential-osxkeychain -o git-credential-osxkeychain</code></p>
</li>
<li><p>把 git-credential-osxkeychain 放入 bin目录：<br> <code>mv git-credential-osxkeychain /usr/local/bin</code></p>
</li>
<li><p>给 <code>git-credential-osxkeychain</code> 赋权限：<br> <code>chmod u+x /usr/local/bin/git-credential-osxkeychain</code></p>
</li>
<li><p>在Git全局配置中进行设置(也可以在某一个项目里面设置):<br> <code>git config --global credential.helper osxkeychain</code></p>
</li>
</ol>
<p>经过上面的设置，下次访问https的项目时只需要输入一次密码,就会存储到osx的钥匙串中了,以后再也不会在Git中询问了.</p>
<h3 id="git库迁移版本库-保留原版本库的所有内容"><a href="#git库迁移版本库-保留原版本库的所有内容" class="headerlink" title="git库迁移版本库(保留原版本库的所有内容)"></a>git库迁移版本库(保留原版本库的所有内容)</h3><p>如果你想从别的 Git 托管服务那里复制一份源代码到新的 Git 托管服务器上的话，可以通过以下步骤来操作。</p>
<ol>
<li><p>从原地址克隆一份裸版本库，比如原本托管于 GitHub<br><code>git clone --bare git://github.com/username/project.git</code></p>
<p> 如果是本地库，应该是<code>git clone --bare 本地库路径</code></p>
</li>
<li><p>然后到新的 Git 服务器上创建一个新项目，比如 Gitcafe。</p>
</li>
<li><p>以镜像推送的方式上传代码到 GitCafe 服务器上。</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd project.git</span><br><span class="line">git push --mirror git@gitcafe.com&#x2F;username&#x2F;newproject.git</span><br></pre></td></tr></table></figure></li>
<li><p>删除本地代码</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ..</span><br><span class="line">rm -rf project.git</span><br></pre></td></tr></table></figure></li>
<li><p>到新服务器 GitCafe 上找到 Clone 地址，直接 Clone 到本地就可以了<br><code>git clone git@gitcafe.com/username/newproject.git</code><br>这种方式可以保留原版本库中的所有内容。</p>
</li>
</ol>
<h2 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a><a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">oh-my-zsh</a></h2><p>自动补全：<a href="https://github.com/wting/autojump" target="_blank" rel="noopener">autojump</a></p>
<p>命令行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 查看当前分支情况</span><br><span class="line">$:gst</span><br><span class="line">效果为显示分支信息：</span><br><span class="line">位于分支 huanyu&#x2F;feature-xxx</span><br><span class="line">您的分支与上游分支 &#39;origin&#x2F;huanyu&#x2F;feature-xxx&#39; 一致</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 合并分支到当前分支</span><br><span class="line">$:gm origin&#x2F;teamwork&#x2F;feature-xxx</span><br><span class="line">效果：合并 origin&#x2F;teamwork&#x2F;feature-xxx 分支到 huanyu&#x2F;feature-xxx 分支</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; git push 推送当前分支到远端</span><br><span class="line">&amp; gp</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 三方库</title>
    <url>/2019/12/25/iOS-third-party/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>好用三方类库汇总，会不定期更新</p>
<ul>
<li><a href="https://github.com/filsv/iPhoneOSDeviceSupport" target="_blank" rel="noopener">iPhoneOSDeviceSupport</a> Xcode iPhoneOS DeviceSupport😎😎😎</li>
</ul>
<h1 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h1><ul>
<li><a href="https://github.com/CodeHubApp/CodeHub" target="_blank" rel="noopener">CodeHub</a> browse and maintain your GitHub repositories on any iOS device!</li>
<li><a href="https://github.com/dkhamsing/open-source-ios-apps" target="_blank" rel="noopener">Open-Source iOS Apps</a> 开源iOS apps列表</li>
<li><a href="https://github.com/Tim9Liu9/TimLiu-iOS" target="_blank" rel="noopener">TimLiu-iOS</a> iOS开发常用三方库、插件、知名博客等等</li>
</ul>
<h1 id="Objective-C"><a href="#Objective-C" class="headerlink" title="Objective-C"></a>Objective-C</h1><h2 id="自动布局"><a href="#自动布局" class="headerlink" title="自动布局"></a>自动布局</h2><ul>
<li><a href="https://github.com/cloudkite/Masonry" target="_blank" rel="noopener">Masonry</a> 最优雅的自动布局解决方案，支持链式编程</li>
<li><a href="https://github.com/PureLayout/PureLayout" target="_blank" rel="noopener">PureLayout</a> 又一强大的自动布局解决方案</li>
</ul>
<h2 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h2><ul>
<li><a href="https://github.com/MxABC/LBXScan" target="_blank" rel="noopener">LBXScan</a> OC版二维码、扫码、扫一扫、ZXing、ZBar、iOS系统AVFoundation扫码封装，扫码界面效果封装</li>
<li><a href="https://github.com/EFPrefix/EFQRCode" target="_blank" rel="noopener">EFQRCode</a> Swift版二维码扫描，支持动图</li>
</ul>
<h2 id="网络请求"><a href="#网络请求" class="headerlink" title="网络请求"></a>网络请求</h2><ul>
<li><a href="https://github.com/AFNetworking/AFNetworking" target="_blank" rel="noopener">AFNetworking</a> 地球人都在用</li>
<li><a href="https://github.com/yuantiku/YTKNetwork" target="_blank" rel="noopener">YTKNetwork</a> YTKNetwork is a high level request util based on AFNetworking.</li>
<li><a href="https://github.com/tonymillion/Reachability" target="_blank" rel="noopener">Reachability</a> 网络状态、监听</li>
<li><a href="https://github.com/robbiehanson/CocoaAsyncSocket" target="_blank" rel="noopener">CocoaAsyncSocket</a> 封装最完善的Socket类库</li>
<li><a href="https://github.com/SDWebImage/SDWebImage" target="_blank" rel="noopener">SDWebImage</a> 图片下载</li>
<li><a href="https://github.com/yangqian111/PPSPing" target="_blank" rel="noopener">PPSPing</a> iOS端的一个ping网络工具</li>
</ul>
<h2 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h2><ul>
<li><a href="https://github.com/ChenYilong/CYLTabBarController" target="_blank" rel="noopener">CYLTabBarController</a> 低耦合集成TabBarController</li>
<li><a href="https://github.com/nicklockwood/iCarousel" target="_blank" rel="noopener">iCarousel</a> 各种3D变换的动画轮播图</li>
<li><a href="https://github.com/cwRichardKim/RKNotificationHub" target="_blank" rel="noopener">RKNotificationHub</a> 在右上方显示通知小角标</li>
<li><a href="https://github.com/CoderMJLee/MJRefresh" target="_blank" rel="noopener">MJRefresh</a> 上下拉刷新控件</li>
<li><a href="https://github.com/ViccAlexander/Chameleon" target="_blank" rel="noopener">Chameleon</a> 扁平颜色框架，可以创建非常漂亮的颜色</li>
<li><a href="https://github.com/Tencent/QMUI_iOS" target="_blank" rel="noopener">QMUIKit</a> 致力于提高项目 UI 开发效率的解决方案 <a href="http://qmuiteam.com/ios" target="_blank" rel="noopener">http://qmuiteam.com/ios</a></li>
<li><a href="https://github.com/paulrolfe/PARTagPicker" target="_blank" rel="noopener">PARTagPicker</a> 创建tag类视图</li>
<li><a href="https://github.com/gsdios/SDCycleScrollView" target="_blank" rel="noopener">SDCycleScrollView</a> 无限循环图片、文字轮播器。</li>
</ul>
<h3 id="图片浏览器"><a href="#图片浏览器" class="headerlink" title="图片浏览器"></a>图片浏览器</h3><ul>
<li><a href="https://github.com/indulgeIn/YBImageBrowser" target="_blank" rel="noopener">YBImageBrowser</a> iOS 图片浏览器 (支持视频)</li>
<li><a href="https://github.com/banchichen/TZImagePickerController" target="_blank" rel="noopener">TZImagePickerController</a> 一个支持多选、选原图和视频的图片选择器，同时有预览、裁剪功能，支持iOS6+。</li>
</ul>
<h3 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h3><ul>
<li><a href="https://github.com/rickytan/RTRootNavigationController" target="_blank" rel="noopener">RTRootNavigationController</a> Implicitly make every view controller has its own navigation bar</li>
</ul>
<h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><ul>
<li><a href="https://github.com/ameizi/awesome-ios-animation" target="_blank" rel="noopener">awesome-ios-animation</a> iOS动画库整理收集</li>
<li><a href="https://github.com/airbnb/lottie-ios" target="_blank" rel="noopener">Lottie for iOS, macOS</a> Airbnb开源的动画框架 <a href="https://www.lottiefiles.com" target="_blank" rel="noopener">动画资源下载</a></li>
<li><a href="https://github.com/HeroTransitions/Hero" target="_blank" rel="noopener">Hero</a> 转场动画</li>
</ul>
<h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><ul>
<li><a href="https://github.com/renzifeng/ZFPlayer" target="_blank" rel="noopener">ZFPlayer</a> 支持定制任何播放器SDK和控制层</li>
</ul>
<h2 id="JSON解析"><a href="#JSON解析" class="headerlink" title="JSON解析"></a>JSON解析</h2><ul>
<li>[YYModel][YYModel]</li>
<li>[MJExtension][MJExtension]</li>
</ul>
<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><ul>
<li><a href="https://github.com/Tencent/wcdb" target="_blank" rel="noopener">WCDB</a> 腾讯出品数据库</li>
<li><a href="https://github.com/ccgus/fmdb" target="_blank" rel="noopener">fmdb</a> A Cocoa / Objective-C wrapper around SQLite</li>
<li><a href="https://github.com/ibireme/YYCache" target="_blank" rel="noopener">YYCache</a></li>
</ul>
<h2 id="性能、crash"><a href="#性能、crash" class="headerlink" title="性能、crash"></a>性能、crash</h2><ul>
<li><a href="https://github.com/Tencent/matrix" target="_blank" rel="noopener">matrix</a> 腾讯开源的应用性能接入框架，支持iOS, macOS和Android。 Matrix 通过接入各种性能监控方案，对性能监控项的异常数据进行采集和分析，输出相应的问题分析、定位与优化建议，从而帮助开发者开发出更高质量的应用。</li>
<li><a href="https://github.com/jasenhuang/NSObjectSafe" target="_blank" rel="noopener">NSObjectSafe</a> Swizzle commonly used function of Foundation container to prevent nil crash</li>
</ul>
<h2 id="响应式编程"><a href="#响应式编程" class="headerlink" title="响应式编程"></a>响应式编程</h2><ul>
<li><a href="https://github.com/ReactiveCocoa/ReactiveObjC" target="_blank" rel="noopener">ReactiveObjC</a></li>
</ul>
<h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><ul>
<li><a href="https://github.com/wangruofeng/YYKit" target="_blank" rel="noopener">YYKit</a> A collection of iOS components.</li>
<li><a href="https://github.com/forkingdog/FDFullscreenPopGesture" target="_blank" rel="noopener">FDFullscreenPopGesture</a> 全屏手势</li>
<li><a href="https://github.com/shixueqian/PrintBeautifulLog" target="_blank" rel="noopener">PrintBeautifulLog</a> 将字典(NSDictionary)和数组(NSArray)打印的Log显示为Json格式</li>
<li><a href="https://github.com/fabiocaccamo/FCUUID" target="_blank" rel="noopener">FCUUID</a> 设备唯一标识码</li>
<li><a href="https://github.com/Shmoopi/iOS-System-Services" target="_blank" rel="noopener">iOS-System-Services</a> 获取各类设备信息</li>
<li><a href="https://github.com/rs/SDWebImage" target="_blank" rel="noopener">SDWebImage</a> 图片下载缓存</li>
<li><a href="https://lookin.work/" target="_blank" rel="noopener">lookin</a> 腾讯出品的免费UI调试工具</li>
<li><a href="https://github.com/WenchaoD/FSCalendar" target="_blank" rel="noopener">FSCalendar</a> A fully customizable iOS calendar library, compatible with Objective-C and Swift</li>
<li><a href="https://github.com/intuit/LocationManager" target="_blank" rel="noopener">LocationManager</a></li>
</ul>
<h1 id="Swift-开源框架"><a href="#Swift-开源框架" class="headerlink" title="Swift 开源框架"></a>Swift 开源框架</h1><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><ul>
<li><a href="https://github.com/Alamofire/Alamofire" target="_blank" rel="noopener">Alamofire</a> 网络请求</li>
<li><a href="https://github.com/RxSwiftCommunity/RxAlamofire" target="_blank" rel="noopener">RxAlamofire</a> 封装Alamofire</li>
<li><a href="https://github.com/Moya/Moya" target="_blank" rel="noopener">Moya</a> Network abstraction layer written in Swift</li>
<li><a href="https://github.com/ashleymills/Reachability.swift" target="_blank" rel="noopener">Reachability.swift</a></li>
<li><a href="https://github.com/daltoniam/Starscream" target="_blank" rel="noopener">Starscream</a> Websockets in swift for iOS and OSX</li>
</ul>
<h2 id="响应式编程-1"><a href="#响应式编程-1" class="headerlink" title="响应式编程"></a>响应式编程</h2><ul>
<li><a href="https://github.com/ReactiveCocoa/ReactiveCocoa" target="_blank" rel="noopener">ReactiveCocoa</a></li>
<li><a href="https://github.com/ReactiveX/RxSwift" target="_blank" rel="noopener">RxSwift</a></li>
</ul>
<h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><ul>
<li><a href="https://github.com/SwiftyJSON/SwiftyJSON" target="_blank" rel="noopener">SwiftyJSON</a> JSON解析</li>
</ul>
<h2 id="动画-1"><a href="#动画-1" class="headerlink" title="动画"></a>动画</h2><ul>
<li><a href="https://github.com/HeroTransitions/Hero" target="_blank" rel="noopener">Hero</a> 转场动画</li>
</ul>
<h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><ul>
<li><a href="https://github.com/SnapKit/SnapKit" target="_blank" rel="noopener">SnapKit</a> 布局</li>
</ul>
<h2 id="UI-1"><a href="#UI-1" class="headerlink" title="UI"></a>UI</h2><ul>
<li><a href="https://github.com/CosmicMind/Material" target="_blank" rel="noopener">Material</a> A UI/UX framework</li>
<li><a href="https://github.com/Ramotion/animated-tab-bar" target="_blank" rel="noopener">Animated-tab-bar</a> 个性化TabBarController</li>
<li><a href="https://github.com/xmartlabs/Eureka" target="_blank" rel="noopener">Eureka</a> dynamic table-view forms</li>
<li><a href="https://github.com/Ramotion/folding-cell" target="_blank" rel="noopener">folding-cell</a> expanding content cell with animation</li>
<li><a href="https://github.com/xmartlabs/XLPagerTabStrip" target="_blank" rel="noopener">XLPagerTabStrip</a> 类新闻滑动页面</li>
<li><a href="https://github.com/raulriera/TextFieldEffects" target="_blank" rel="noopener">TextFieldEffects</a> 高度自定义输入框</li>
<li><a href="https://github.com/patchthecode/JTAppleCalendar" target="_blank" rel="noopener">JTAppleCalendar</a> The Unofficial Apple iOS Swift Calendar View</li>
<li><a href="https://github.com/philackm/ScrollableGraphView" target="_blank" rel="noopener">ScrollableGraphView</a> An adaptive scrollable graph view for iOS to visualise simple discrete datasets</li>
<li><a href="https://github.com/Ramotion/expanding-collection" target="_blank" rel="noopener">expanding-collection</a> ExpandingCollection is an animated material design UI card peek/pop controller</li>
<li><a href="https://github.com/vikmeup/SCLAlertView-Swift" target="_blank" rel="noopener">SCLAlertView-Swift</a> Beautiful animated Alert View.</li>
<li><a href="https://github.com/marcosgriselli/ViewAnimator" target="_blank" rel="noopener">ViewAnimator</a> </li>
<li><a href="https://github.com/Yalantis/Koloda" target="_blank" rel="noopener">Koloda</a> KolodaView is a class designed to simplify the implementation of Tinder like cards on iOS (类似于探探界面)</li>
<li><a href="https://github.com/mamaral/Neon" target="_blank" rel="noopener">Neon</a> A powerful Swift programmatic UI layout framework.</li>
<li><a href="https://github.com/cgoldsby/LoginCritter" target="_blank" rel="noopener">LoginCritter</a> An animated avatar that responds to text field interactions</li>
<li><a href="https://github.com/SwipeCellKit/SwipeCellKit" target="_blank" rel="noopener">SwipeCellKit</a> Swipeable UITableViewCell/UICollectionViewCell based on the stock Mail.app, implemented in Swift.</li>
<li><a href="https://github.com/okmr-d/DOFavoriteButton" target="_blank" rel="noopener">DOFavoriteButton</a> Cute Animated Button written in Swift.</li>
<li><a href="https://github.com/alexaubry/BulletinBoard" target="_blank" rel="noopener">BulletinBoard</a> General-purpose contextual cards for iOS</li>
<li><a href="https://github.com/dekatotoro/SlideMenuControllerSwift" target="_blank" rel="noopener">SlideMenuControllerSwift</a> iOS Slide Menu View based on Google+, iQON, Feedly, Ameba iOS app. It is written in pure swift.</li>
<li><a href="https://github.com/Yalantis/Persei" target="_blank" rel="noopener">Persei</a> Animated top menu for UITableView / UICollectionView / UIScrollView written in Swift </li>
<li><a href="https://github.com/dillidon/alerts-and-pickers" target="_blank" rel="noopener">alerts-and-pickers</a> Advanced usage of UIAlertController and pickers based on it: Telegram, Contacts, Location, PhotoLibrary, Country, Phone Code, Currency, Date…</li>
<li><a href="https://github.com/jonkykong/SideMenu" target="_blank" rel="noopener">SideMenu</a> Simple side menu control for iOS, no code necessary! Lots of customization. Add it to your project in 5 minutes or less.</li>
<li><a href="https://github.com/Skyscanner/SkyFloatingLabelTextField" target="_blank" rel="noopener">SkyFloatingLabelTextField</a> A beautiful and flexible text field control implementation of “Float Label Pattern”. Written in Swift.</li>
<li><a href="https://github.com/Ramotion/circle-menu" target="_blank" rel="noopener">circle-menu</a> CircleMenu is a simple, elegant UI menu with a circular layout and material design animations. </li>
<li><a href="https://github.com/xmartlabs/XLActionController" target="_blank" rel="noopener">XLActionController</a> Fully customizable and extensible action sheet controller written in Swift</li>
<li><a href="https://github.com/WenchaoD/FSPagerView" target="_blank" rel="noopener">FSPagerView</a> FSPagerView is an elegant Screen Slide Library. It is extremely helpful for making Banner View、Product Show、Welcome/Guide Pages、Screen/ViewController Sliders.</li>
<li><a href="https://github.com/badoo/Chatto" target="_blank" rel="noopener">Chatto</a> A lightweight framework to build chat applications, made in Swift</li>
</ul>
<h3 id="图片浏览器-1"><a href="#图片浏览器-1" class="headerlink" title="图片浏览器"></a>图片浏览器</h3><ul>
<li><a href="https://github.com/hyperoslo/ImagePicker" target="_blank" rel="noopener">ImagePicker</a> Reinventing the way ImagePicker works.</li>
</ul>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul>
<li><a href="https://github.com/onevcat/Kingfisher" target="_blank" rel="noopener">Kingfisher</a> 类似于<a href="https://github.com/rs/SDWebImage" target="_blank" rel="noopener">SDWebImage</a></li>
<li><a href="https://github.com/realm/SwiftLint" target="_blank" rel="noopener">SwiftLint</a> 一个用于强制检查 Swift 代码风格和规定的一个工具</li>
<li><a href="https://github.com/mxcl/PromiseKit" target="_blank" rel="noopener">PromiseKit</a> </li>
<li><a href="https://github.com/SwifterSwift/SwifterSwift" target="_blank" rel="noopener">SwifterSwift</a> a collection of over 500 native Swift extensions</li>
<li><a href="https://github.com/duemunk/Async" target="_blank" rel="noopener">Async</a> Syntactic sugar in Swift for asynchronous dispatches in Grand Central Dispatch</li>
<li><a href="https://github.com/malcommac/SwiftDate" target="_blank" rel="noopener">SwiftDate</a> All you need to have fun with Dates in Swift</li>
<li><a href="https://github.com/kishikawakatsumi/KeychainAccess" target="_blank" rel="noopener">KeychainAccess</a> Simple Swift wrapper for Keychain that works on iOS, watchOS, tvOS and macOS.</li>
<li><a href="https://github.com/krzysztofzablocki/Sourcery" target="_blank" rel="noopener">Sourcery</a> Meta-programming for Swift, stop writing boilerplate code.</li>
<li><a href="https://github.com/radex/SwiftyUserDefaults" target="_blank" rel="noopener">SwiftyUserDefaults</a> Modern Swift API for NSUserDefaults</li>
<li><a href="https://github.com/zixun/GodEye" target="_blank" rel="noopener">GodEye</a> Automaticly display Log,Crash,Network,ANR,Leak,CPU,RAM,FPS,NetFlow,Folder and etc with one line of code based on Swift. Just like God opened his eyes.</li>
</ul>
<h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><ul>
<li><p><a href="https://github.com/ochococo/Design-Patterns-In-Swift" target="_blank" rel="noopener">Design-Patterns-In-Swift</a></p>
</li>
<li><p><a href="https://github.com/krzyzanowskim/CryptoSwift" target="_blank" rel="noopener">CryptoSwift</a> 加解密</p>
</li>
<li><p><a href="https://github.com/stephencelis/SQLite.swift" target="_blank" rel="noopener">SQLite.swift</a></p>
</li>
<li><p><a href="https://github.com/mac-cain13/R.swift" target="_blank" rel="noopener">R.swift</a> Get strong typed, autocompleted resources like images, fonts and segues in Swift projects</p>
</li>
</ul>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><ul>
<li><a href="https://github.com/soapyigu/Swift-30-Projects" target="_blank" rel="noopener">Swift-30-Projects</a> 30 mini Swift Apps for self-study by <a href="https://github.com/soapyigu" target="_blank" rel="noopener">故胤道长</a></li>
<li><a href="https://github.com/btrn/Swift" target="_blank" rel="noopener">Swift</a> Learning Swift. Reusable apps code.</li>
</ul>
<h2 id="二维码-1"><a href="#二维码-1" class="headerlink" title="二维码"></a>二维码</h2><ul>
<li><a href="https://github.com/garnele007/SwiftOCR" target="_blank" rel="noopener">SwiftOCR</a> Fast and simple OCR library written in Swift</li>
<li><a href="https://github.com/EyreFree/EFQRCode" target="_blank" rel="noopener">EFQRCode</a> A better way to operate quick response code in Swift. </li>
</ul>
<h2 id="Swift开源App"><a href="#Swift开源App" class="headerlink" title="Swift开源App"></a>Swift开源App</h2><ul>
<li><a href="https://github.com/mozilla-mobile/firefox-ios" target="_blank" rel="noopener">Firefox</a></li>
<li><a href="https://github.com/wordpress-mobile/WordPress-iOS" target="_blank" rel="noopener">WordPress</a></li>
<li><a href="https://github.com/MengTo/DesignerNewsApp" target="_blank" rel="noopener">Designer News</a></li>
<li><a href="https://github.com/fullstackio/FlappySwift" target="_blank" rel="noopener">Flappy</a></li>
<li><a href="https://github.com/wireapp/wire-ios" target="_blank" rel="noopener">wire</a></li>
<li><a href="https://github.com/lexrus/VPNOn" target="_blank" rel="noopener">VPN On</a></li>
<li><a href="https://github.com/CatchChat/Yep" target="_blank" rel="noopener">Yep</a></li>
<li><a href="https://github.com/hilen/TSWeChat" target="_blank" rel="noopener">仿微信</a></li>
<li><a href="https://github.com/austinzheng/swift-2048" target="_blank" rel="noopener">2048</a></li>
<li><a href="https://github.com/audiokit/AudioKit" target="_blank" rel="noopener">AudioKit</a></li>
<li><a href="https://github.com/lhc70000/iina" target="_blank" rel="noopener">iina</a> 开源视频播放器</li>
<li><a href="https://github.com/allenwong/30DaysofSwift" target="_blank" rel="noopener">30DaysofSwift</a></li>
</ul>
<h1 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h1><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><ul>
<li><a href="https://github.com/trending" target="_blank" rel="noopener">GitHub Trend</a> 页面总结了每天/每周/每月周期的热门 Repositories 和 Developers，你可以看到在某个周期处于热门状态的开发项目和开发者。</li>
<li><a href="https://github.com/topics" target="_blank" rel="noopener">GitHub Topic</a> 展示了最新和最流行的讨论主题，在这里你不仅能够看到开发项目，还能看到更多非开发技术的讨论主题，比如 Job、Chrome 浏览器等。</li>
<li><a href="https://github.com/search/advanced" target="_blank" rel="noopener">高级搜索功能</a></li>
<li><a href="https://help.github.com/articles/searching-on-github/" target="_blank" rel="noopener">Searching on GitHub</a> 官方给出的帮助指南</li>
</ul>
<h3 id="条件搜索"><a href="#条件搜索" class="headerlink" title="条件搜索"></a>条件搜索</h3><h4 id="搜开发者"><a href="#搜开发者" class="headerlink" title="搜开发者"></a>搜开发者</h4><table>
<thead>
<tr>
<th align="center">搜索条件</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">location:</td>
<td align="center">location:china ,匹配用户填写的地址在china</td>
</tr>
<tr>
<td align="center">language:</td>
<td align="center">language:jiavascript,匹配开发语言为javascript的开发者</td>
</tr>
<tr>
<td align="center">followers:</td>
<td align="center">followers:&gt; = 1000,匹配拥有超过1000名关注者的开发者</td>
</tr>
<tr>
<td align="center">in:fullname</td>
<td align="center">jack in:fullname,匹配用户实名为jack的开发者</td>
</tr>
</tbody></table>
<ul>
<li>在 <a href="https://help.github.com/articles/about-searching-on-github/" target="_blank" rel="noopener">这里</a> 可以查看 GitHub 官方出品的搜索技巧</li>
<li>比如需要寻找国产软件，首先想到的应该是在 GituHub 上找国内开发者，搜索时设置 <code>location</code> 为 <code>China</code>，如果你要寻找使用 <code>javascript</code> 语言开发者，则再增加 <code>language</code> 为 <code>javascript</code>，整个搜索条件就是：<code>language:javascript location:china</code>，从搜索结果来看，我们找到了近 17000 名地区信息填写为 <code>china</code> 的 <code>javascript</code> 开发者，朋友们熟悉的阮一峰老师排在前列。根据官方指引，搜索 GitHub 用户时还支持使用 <code>followers</code>、<code>in:fullname</code> 组合条件进行搜索。</li>
</ul>
<h4 id="搜项目"><a href="#搜项目" class="headerlink" title="搜项目"></a>搜项目</h4><table>
<thead>
<tr>
<th align="center">搜索条件</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Awesome +关键字</td>
<td align="center">神奇的关键字Awesome,帮助找到优秀的工具列表</td>
</tr>
<tr>
<td align="center">stars:</td>
<td align="center">stars:&gt; = 500，匹配收藏数量超过500的项目</td>
</tr>
<tr>
<td align="center">language:</td>
<td align="center">language;javascript,匹配以javascript作为开发语言的项目</td>
</tr>
<tr>
<td align="center">forks:</td>
<td align="center">forks:&gt; = 500,匹配分支数量超过500的项目</td>
</tr>
</tbody></table>
<ul>
<li>Awesome + 关键字: Awesome 似乎已经成为不少 GitHub 项目喜爱的命名之一，比如前面提及要找到优秀的 Windows 软件，可以尝试搜索 Awesome windows，排名前列的结果出现了 <a href="https://github.com/Awesome-Windows/Awesome" target="_blank" rel="noopener">Windows/Awesome</a> 项目</li>
<li>如果你明确需要寻找某类特定的项目，比如用某种语言开发、Stars 数量需要达到标准的项目，在搜索框中直接输入搜索条件即可。其中用于发现项目，我的用法是灵活运用下面几个搜索条件：stars:、language:、forks:，其实就是设置项目收藏、开发语言、派生的搜索条件，比如输入 stars:&gt;=500 language:javascript，<a href="https://github.com/search?q=stars%3A%3E%3D500+language%3Ajavascript" target="_blank" rel="noopener">得到的结果</a> 就是收藏大于和等于 500 的 javascript 项目，排名前列是开源代码库和课程项目 freeCodeCamp、大热门的 Vue 和 React 项目。</li>
</ul>
<h2 id="优秀项目"><a href="#优秀项目" class="headerlink" title="优秀项目"></a>优秀项目</h2><ul>
<li><a href="https://github.com/vhf/free-programming-books" target="_blank" rel="noopener">free-programming-books</a> 整理了所有和编程相关的免费书籍，同时也有 中文版项目。</li>
<li><a href="https://github.com/tiimgreen/github-cheat-sheet/" target="_blank" rel="noopener">github-cheat-sheet</a> 集合了使用 GitHub 的各种技巧。</li>
<li><a href="https://github.com/Trinea/android-open-project" target="_blank" rel="noopener">android-open-project</a> 涵盖 Android 开发的优秀开源项目。</li>
<li><a href="https://github.com/1c7/chinese-independent-developer" target="_blank" rel="noopener">chinese-independent-developer</a> 聚合所有中国独立开发者的项目。</li>
</ul>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul>
<li><a href="http://blog.wangruofeng007.com/blog/2016/04/15/iosdi-san-fang-ku-hui-zong/" target="_blank" rel="noopener">iOS第三方库汇总</a></li>
</ul>
]]></content>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>有趣的东西</title>
    <url>/2019/12/25/%E6%9C%89%E8%B6%A3%E7%9A%84%E4%B8%9C%E8%A5%BF/</url>
    <content><![CDATA[<h2 id="教育"><a href="#教育" class="headerlink" title="教育"></a>教育</h2><ul>
<li><p><a href="https://phet.colorado.edu/zh_CN/" target="_blank" rel="noopener">PhET</a> </p>
<ul>
<li>由诺贝尔奖获得者卡尔·威曼于2002年创立，PhET互动仿真程序计划由科罗拉多大学的团队专项运营，旨在创建免费的数学和科学互动程序。 PhET 是基于拓展型教育的相关研究并且激励学生在直观的、游戏化的环境中进行探索和发现。</li>
<li>PhET分为五个学科：物理、生物、化学、地球科学和数学，将近200款不同类型的模拟软件，从简单的数学基础运算到高深的物理核裂变、量子化学等都囊括其中。</li>
</ul>
</li>
<li><p><a href="https://www.yxgapp.com/" target="_blank" rel="noopener">译学馆</a> 国外资源搬运工，20个多个搜索分类，每个门类下面有120个视频资源。有国家地理频道出品的儿童版动物和环球国家节目。</p>
</li>
<li><p><a href="https://zh.khanacademy.org/" target="_blank" rel="noopener">可汗学院</a> </p>
<ul>
<li>可汗学院是一家非盈利机构，努力为全世界所有人提供免费的一流教育。</li>
<li>从小学数学，到高中微积分，再到大学高等数学等，都有讲解。除了数学，它还有历史、金融、物理、化学、生物、天文学等多个学科的核心课程。</li>
</ul>
</li>
<li><p><a href="https://sou-yun.cn/poetlifemap.aspx" target="_blank" rel="noopener">唐宋文学编年地图</a> 通过一张巨大的网，把和诗人、诗歌有关的文学、历史、地理全部串联起来。</p>
</li>
<li><p><a href="https://ed.ted.com/" target="_blank" rel="noopener">Teded动画</a> </p>
<ul>
<li>Teded动画涵盖12个门类，教育、语言、数学、科学、艺术类、商业类等等都囊括其中，超过100个动画。</li>
<li>每集虽然只有5分钟，但是含金量十足，而且特别能启发孩子的思考。</li>
<li>它就像一本巨型的百科全书，解答孩子们内心中困惑的十万个为什么。</li>
<li>更像一位引路人，让孩子们习惯提问和思考，建造属于自己的思维迷宫。</li>
</ul>
</li>
<li><p><a href="https://ltfc.net/" target="_blank" rel="noopener">中华珍宝馆</a> 收录了海量的极品书画艺术品。</p>
</li>
<li><p><a href="https://www.allhistory.com/" target="_blank" rel="noopener">全历史</a></p>
<ul>
<li>全历史就是一个可以帮助孩子理清历史的超强网站（有app）。</li>
<li>全历史网站有三个核心的功能，即以历史地图、关系图、路径图等方式，让复杂的历史变得直观和清晰。</li>
</ul>
</li>
<li><p><a href="https://v.youku.com/v_show/id_XMzM5MTc0MTE4MA==" target="_blank" rel="noopener">青少年常见心理问题与对策</a> 李玫瑾</p>
</li>
</ul>
<h2 id="文学"><a href="#文学" class="headerlink" title="文学"></a>文学</h2><ul>
<li><a href="http://lib.xcz.im/library" target="_blank" rel="noopener">中华诗词数据库</a><ul>
<li>中华诗词数据库通过搭建百万古诗词库，从古诗词切入到中国传统文化，并开设了语音、写字、绘画、原创、日赏、配图、音乐、日赏等频道板块，已经形成了一个优质传统文化的学习交流平台。</li>
<li>模块介绍分类：选集、主题、词牌、写景、节日、节气、课本、试单；发现：接龙、飞花、答题；平台特色我们会把海内外优质的画家、书法家、教授学者、名人明星、专业人士等邀请到平台，留下最优质的内容给用户，做一个专业的高质量的中国传统文化交流平台。除了古詩詞，我們会拓展除古诗词以外的其他板块，包括：古画、书法、戏曲、对联、瓷、茶、丝绸、古文物、古建筑、敦煌、手工艺、民族语言文字、民族生活服饰、儒释道庄子墨子思想等等。</li>
</ul>
</li>
<li><a href="http://hanziyuan.net" target="_blank" rel="noopener">汉字源</a> 一个从1994年开始研究古汉字的美国人Richard Sears创建的汉字网站</li>
<li><a href="http://tv.cctv.com/lm/bjjt/" target="_blank" rel="noopener">百家讲坛</a></li>
</ul>
<h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><ul>
<li><a href="https://www.bilibili.com/video/av6547465/?p=1" target="_blank" rel="noopener">中国史 2016</a></li>
<li><a href="https://www.bilibili.com/video/av17515643/?spm_id_from=333.788.videocard.4" target="_blank" rel="noopener">中国历代帝王合集</a></li>
</ul>
<h3 id="百家讲坛国史通鉴系列，主讲人方志远"><a href="#百家讲坛国史通鉴系列，主讲人方志远" class="headerlink" title="百家讲坛国史通鉴系列，主讲人方志远"></a>百家讲坛国史通鉴系列，主讲人方志远</h3><ul>
<li><a href="https://www.bilibili.com/video/av12665313" target="_blank" rel="noopener">第一部：天下大势</a></li>
<li><a href="https://www.bilibili.com/video/av12635825" target="_blank" rel="noopener">第二部：春秋战国篇</a></li>
<li><a href="https://www.bilibili.com/video/av12641362" target="_blank" rel="noopener">第三部：秦汉三国篇</a></li>
<li><a href="https://www.bilibili.com/video/av15709702" target="_blank" rel="noopener">第四部：两晋南北朝篇</a></li>
<li><a href="https://www.bilibili.com/video/av21369162" target="_blank" rel="noopener">第五部：隋唐五代篇</a></li>
</ul>
<h2 id="虚拟号码"><a href="#虚拟号码" class="headerlink" title="虚拟号码"></a>虚拟号码</h2><ul>
<li><a href="https://www.pdflibr.com" target="_blank" rel="noopener">云短信</a> 在线短信接收</li>
<li><a href="https://www.becmd.com" target="_blank" rel="noopener">免费接码</a> 在线接收短信</li>
</ul>
<h2 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h2><ul>
<li><a href="https://www.jiumodiary.com/" target="_blank" rel="noopener">Jiumo Search 鸠摩搜索</a></li>
<li><a href="http://cn.epubee.com/books/" target="_blank" rel="noopener">ePUBee</a> 全球最大的免费电子书库，超过10万本书籍，50万个文件版本，总能找到你喜欢的适合阅读器的电子书文件。品类齐全，搜索功能强大，图书管理方便。</li>
<li><a href="https://www.jiumodiary.com/" target="_blank" rel="noopener">Jiumo Search 鸠摩搜索</a> 一个强大的搜书神站</li>
<li><a href="http://www.booklist.mobi" target="_blank" rel="noopener">书单</a></li>
</ul>
<h2 id="磁力"><a href="#磁力" class="headerlink" title="磁力"></a>磁力</h2><ul>
<li><a href="http://cili.pro" target="_blank" rel="noopener">磁力Pro</a></li>
<li><a href="http://btkitty.pet" target="_blank" rel="noopener">btkitty</a></li>
<li><a href="https://zooqle.com" target="_blank" rel="noopener">zooqle</a></li>
<li><a href="https://rarbgprx.org/torrents.php" target="_blank" rel="noopener">rarbg</a></li>
<li><a href="http://www.ed2000.me" target="_blank" rel="noopener">ED2000资源共享</a></li>
<li><a href="http://bt.xiandan.in" target="_blank" rel="noopener">磁力搜</a> <a href="https://github.com/dengyuhan/magnetW" target="_blank" rel="noopener">GitHub地址</a> <a href="https://github.com/youusername/magnetX" target="_blank" rel="noopener">Windows、Mac版</a></li>
<li><a href="https://github.com/webtorrent/webtorrent-desktop" target="_blank" rel="noopener">WebTorrent Desktop</a> 磁力在线播放、下载</li>
<li><a href="http://oabt004.com" target="_blank" rel="noopener">磁力站</a></li>
</ul>
<h2 id="影视"><a href="#影视" class="headerlink" title="影视"></a>影视</h2><ul>
<li><a href="http://www.6vgood.com/" target="_blank" rel="noopener">6v电影网</a></li>
<li><a href="http://www.mp4ba.com/" target="_blank" rel="noopener">mp4ba</a></li>
<li><a href="https://www.dy2018.com" target="_blank" rel="noopener">电影天堂</a></li>
<li><a href="http://www.zimuzu.io" target="_blank" rel="noopener">字幕组</a> 原<a href="http://www.yyets.com" target="_blank" rel="noopener">人人影视</a></li>
<li><a href="http://zb.iptv186.com/iptv.php?act=home" target="_blank" rel="noopener">电视直播</a></li>
<li><a href="http://ifkdy.com/phb/douban.html" target="_blank" rel="noopener">电影Top排名</a></li>
<li><a href="http://www.btbtdy.net" target="_blank" rel="noopener">BT电影天堂</a></li>
<li><a href="http://www.xunyingwang.com" target="_blank" rel="noopener">讯影网</a></li>
<li><a href="https://www.fantasy.tv" target="_blank" rel="noopener">范特西视频</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Windows</title>
    <url>/2019/12/24/Windows/</url>
    <content><![CDATA[<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><ul>
<li><a href="https://msdn.itellyou.cn" target="_blank" rel="noopener">MSDN</a></li>
<li><a href="https://tb.rg-adguard.net" target="_blank" rel="noopener">TechBench by WZT</a></li>
<li><a href="https://apphot.cc/" target="_blank" rel="noopener">心海e站</a></li>
<li><a href="https://www.423down.com/" target="_blank" rel="noopener">zd423</a></li>
<li><a href="https://free.appnee.com" target="_blank" rel="noopener">Free All We Need</a></li>
<li><a href="http://www.th-sjy.com" target="_blank" rel="noopener">th_sjy汉化博客</a></li>
<li><a href="https://www.ccava.net" target="_blank" rel="noopener">漫步白月光 - 伊甸园</a></li>
<li><a href="http://mefcl.com" target="_blank" rel="noopener">mefcl</a></li>
<li><a href="http://www.ymso.cc" target="_blank" rel="noopener">壹米软件</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_89a729a40102wjwp.html" target="_blank" rel="noopener">飞扬时空</a></li>
<li><a href="http://free.apprcn.com" target="_blank" rel="noopener">反斗限免</a> Mac、Windows、Android、iOS等平台，以及各种限免资源</li>
<li><a href="http://www.carrotchou.blog" target="_blank" rel="noopener">胡萝卜周</a></li>
<li><a href="https://www.luochenzhimu.com" target="_blank" rel="noopener">落尘之木</a></li>
<li><a href="http://www.itellyou.cn/" target="_blank" rel="noopener">MSDN I TEll YOU</a> 干净的系统镜像！</li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener">清华大学开源软件镜像站</a> 可以下载到很多Linux镜像，速度很快！</li>
</ul>
<h3 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h3><ul>
<li><a href="https://github.com/Awesome-Windows/Awesome" target="_blank" rel="noopener">Awesome-Windows</a> An awesome &amp; curated list of best applications and tools for Windows.</li>
<li><a href="https://sspai.com/post/41563" target="_blank" rel="noopener">GitHub 上那些免费好用的 Windows 软件</a></li>
<li><a href="https://sspai.com/post/41325" target="_blank" rel="noopener">GitHub 中那些不错的免费软件</a></li>
<li><a href="https://sspai.com/post/46061" target="_blank" rel="noopener">掌握 3 个搜索技巧，在 GitHub 上快速找到实用软件资源</a></li>
</ul>
<h3 id="视频播放"><a href="#视频播放" class="headerlink" title="视频播放"></a>视频播放</h3><ul>
<li><a href="http://player.qq.com" target="_blank" rel="noopener">QQ影音</a></li>
<li><a href="http://store.iqiyi.com/web/iqiyi/detail/qisuyingyin.action" target="_blank" rel="noopener">爱奇艺万能播放器</a></li>
<li><a href="https://github.com/zogvm/zogvm" target="_blank" rel="noopener">Zogvm</a> 音视频管理系统</li>
</ul>
<h3 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h3><ul>
<li><a href="https://mcool.appinn.me" target="_blank" rel="noopener">Mcool</a> 极简音乐播放器</li>
<li><a href="http://www.foobar2000.org" target="_blank" rel="noopener">foobar2000</a> 本地音乐播放器 <a href="http://www.foobar2000.com.cn" target="_blank" rel="noopener">汉化版</a></li>
<li><a href="https://www.52pojie.cn/forum.php?mod=viewthread&tid=803762&fromguid=hot" target="_blank" rel="noopener">MusicTools</a> <a href="https://www.lanzous.com/b245307/" target="_blank" rel="noopener">下载地址</a> 付费无损音乐免费下载神器</li>
</ul>
<h3 id="图片、截图"><a href="#图片、截图" class="headerlink" title="图片、截图"></a>图片、截图</h3><ul>
<li><a href="https://cn.bandisoft.com/honeyview/" target="_blank" rel="noopener">Honeyview</a> 图像查看器 </li>
<li><a href="https://www.faststone.org/" target="_blank" rel="noopener">FastStone Image Viewer</a> 免费的图片查看器</li>
<li><a href="https://www.snipaste.com/" target="_blank" rel="noopener">SnipPaste</a> 国人开发的一款截图软件</li>
<li><a href="https://getsharex.com/" target="_blank" rel="noopener">ShareX</a> 一款免费开源软件，ShareX 的功能可以说多到夸张。你可以用它截图、录屏、拾取颜色、合并图像、生成视频缩略图、检查哈希值、生成二维码、捕捉网页和滚动窗口、对图片进行 OCR 文字识别，甚至还可以当做 FTP 客户端使用。</li>
</ul>
<h3 id="PDF"><a href="#PDF" class="headerlink" title="PDF"></a>PDF</h3><ul>
<li><a href="https://github.com/sumatrapdfreader/sumatrapdf" target="_blank" rel="noopener">Sumatra PDF</a> 轻量级 PDF 阅读器 <a href="https://www.sumatrapdfreader.org/free-pdf-reader.html" target="_blank" rel="noopener">官网</a> <a href="https://www.sumatrapdfreader.org/download-free-pdf-viewer.html" target="_blank" rel="noopener">下载</a></li>
</ul>
<h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><ul>
<li><a href="https://www.7-zip.org" target="_blank" rel="noopener">7-Zip</a> 解压缩软件</li>
<li><a href="https://www.bandisoft.com/bandizip/" target="_blank" rel="noopener">Bandizip</a> 免费解压缩软件</li>
</ul>
<h3 id="文件搜索、管理、查看"><a href="#文件搜索、管理、查看" class="headerlink" title="文件搜索、管理、查看"></a>文件搜索、管理、查看</h3><ul>
<li><a href="https://pooi.moe/QuickLook/" target="_blank" rel="noopener">QuickLook</a> <a href="https://github.com/QL-Win/QuickLook" target="_blank" rel="noopener">GitHub</a> 空格键预览文件工具 <a href="https://www.microsoft.com/zh-cn/p/quicklook/9nv4bs3l1h4s" target="_blank" rel="noopener">点此进入Windows商店下载</a></li>
<li><a href="https://www.listary.com/" target="_blank" rel="noopener">Listary</a> 通过快捷键（连按两个Ctrl键）呼出搜索栏，然后输入关键字进行搜索，是一款效率非常高的搜索工具，约 3.4 MB</li>
<li><a href="https://feem.io/" target="_blank" rel="noopener">Feem V4</a> 跨平台的局域网文件发送分享工具</li>
<li><a href="https://fliqlo.com/" target="_blank" rel="noopener">fliqlo</a> 时间屏保</li>
<li><a href="http://www.q-dir.com" target="_blank" rel="noopener">Q-Dir</a> 多窗口资源管理器</li>
<li><a href="https://www.voidtools.com" target="_blank" rel="noopener">Everything</a> 文件搜索</li>
<li><a href="http://www.uderzo.it/main_products/space_sniffer/" target="_blank" rel="noopener">SpaceSniffer</a> 免费的全盘视觉化扫描</li>
<li><a href="https://github.com/Wox-launcher/Wox" target="_blank" rel="noopener">Wox</a> 一款快捷启动器，类似于 macOS 的 Alfred 和 Windows 的 Listary。它可以启动程序、执行命令行、搜索网页，还可以自定义各种功能。 <a href="http://www.getwox.com/" target="_blank" rel="noopener">官网</a> <a href="https://github.com/Wox-launcher/Wox/releases" target="_blank" rel="noopener">下载</a></li>
</ul>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li><a href="http://neatdownloadmanager.com" target="_blank" rel="noopener">NeatDownloadManager</a> a free Internet Download Manager for macOS (OS X 10.10  or higher) and Windows (Windows 7 or higher), File only 800 KB!</li>
<li><a href="https://www.freedownloadmanager.org/zh/" target="_blank" rel="noopener">FDM</a> 这是一款在 Windows, macOS, Android 及Linux 系统下，免费强大又现代的下载软件</li>
<li><a href="http://www.eagleget.com/cn/" target="_blank" rel="noopener">EagleGet</a> 一款优秀的免费在线视频下载软件，亦支持</li>
</ul>
<h3 id="办公"><a href="#办公" class="headerlink" title="办公"></a>办公</h3><ul>
<li><a href="http://www.wofficebox.com" target="_blank" rel="noopener">万彩办公大师</a> 办公小工具百宝箱</li>
</ul>
<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul>
<li><a href="http://www.wepe.com.cn" target="_blank" rel="noopener">微PE工具箱</a></li>
<li><a href="https://ditto-cp.sourceforge.io/" target="_blank" rel="noopener">Ditto</a> <a href="https://www.microsoft.com/en-us/p/ditto-clipboard/9nblggh3zbjq#activetab=pivot:overviewtab" target="_blank" rel="noopener">UWP: Ditto Clipboard</a> 一款剪切板增强软件</li>
<li><a href="https://www.52pojie.cn/thread-692917-1-1.html" target="_blank" rel="noopener">天若ocr文字识别工具</a> <a href="https://pan.baidu.com/s/1P2xb9kBwX1gj8j2_APivZw" target="_blank" rel="noopener">百度网盘地址</a></li>
<li><a href="http://www.chuyu.me/zh-Hans/index.html" target="_blank" rel="noopener">Dism++</a> 简洁的系统管理软件，集成了很多小工具，还可以系统备份</li>
<li><a href="https://www.52pojie.cn/thread-818034-1-1.html" target="_blank" rel="noopener">Lily启动管理</a></li>
<li><a href="https://github.com/kovidgoyal/calibre" target="_blank" rel="noopener">Calibre</a> 电子书管理神器 <a href="https://calibre-ebook.com/" target="_blank" rel="noopener">官网</a> <a href="https://calibre-ebook.com/download" target="_blank" rel="noopener">下载</a> </li>
<li><a href="https://github.com/keepassx/keepassx" target="_blank" rel="noopener">KeePassX</a> 一款本地密码管理软件，它是 KeePass 的一个移植版本，如今已经是全平台密码管理软件了。整体很简单，密码方面的功能够用，采用了 AES256 和 Twofish 算法来加密密码。支持自动排序、快速备份等功能。 <a href="http://www.keepassx.org/" target="_blank" rel="noopener">官网</a> <a href="https://www.keepassx.org/downloads" target="_blank" rel="noopener">下载</a><ul>
<li>KeePassX 支持 Windows、macOS、Linux。 </li>
</ul>
</li>
<li><a href="https://github.com/snowie2000/mactype" target="_blank" rel="noopener">MacType</a> 字体渲染增强 <a href="http://www.mactype.net/" target="_blank" rel="noopener">官网</a> <a href="https://github.com/snowie2000/mactype/releases" target="_blank" rel="noopener">下载</a></li>
<li><a href="https://github.com/TranslucentTB/TranslucentTB" target="_blank" rel="noopener">TranslucentTB</a> 一个可以让 Windows 底部的菜单栏变得模糊、完全透明的小插件。 <a href="https://github.com/TranslucentTB/TranslucentTB/releases" target="_blank" rel="noopener">下载</a></li>
<li><a href="https://github.com/rainmeter/rainmeter" target="_blank" rel="noopener">Rainmeter</a> 一款功能极其强大的桌面动效软件，并在许多网友的帮助下逐渐建立起了强大的社区，可以高度自定义桌面。<a href="https://www.rainmeter.net/" target="_blank" rel="noopener">官网</a> <a href="https://github.com/rainmeter/rainmeter/releases/" target="_blank" rel="noopener">下载</a></li>
</ul>
<h3 id="文本编辑、查看"><a href="#文本编辑、查看" class="headerlink" title="文本编辑、查看"></a>文本编辑、查看</h3><ul>
<li><a href="https://github.com/donho/notepad-plus-plus" target="_blank" rel="noopener">NotePad++</a> 轻量编辑器 <a href="https://notepad-plus-plus.org" target="_blank" rel="noopener">官网</a> <a href="https://notepad-plus-plus.org/download/v7.5.1.html" target="_blank" rel="noopener">下载</a></li>
</ul>
<h3 id="Office"><a href="#Office" class="headerlink" title="Office"></a>Office</h3><ul>
<li>WPS党政机关专业版<ul>
<li><a href="http://wpspro.support.wps.cn/gov/guangdong/huizhou/" target="_blank" rel="noopener">惠州</a> 包含<a href="http://wpspro.support.wps.cn/gov/guangdong/huizhou/installation/WPS%20Office%202019专业版（惠州市直机关单位）.exe" target="_blank" rel="noopener">WPS 2019</a>、<a href="http://wpspro.support.wps.cn/gov/guangdong/huizhou/installation/WPS%20Office%202016专业版（惠州市直机关单位）.exe" target="_blank" rel="noopener">WPS2016</a></li>
<li><a href="http://wpspro.support.wps.cn/gov/guangdong/zhuhai/" target="_blank" rel="noopener">珠海</a> <a href="http://wpspro.support.wps.cn/gov/guangdong/zhuhai/installation/WPS%20Office%202016%20珠海市政府专业版（10.8.2.6726）.exe" target="_blank" rel="noopener">WPS 2016</a></li>
<li><a href="http://wpspro.support.wps.cn/gov/guangdong/" target="_blank" rel="noopener">广东省</a> </li>
<li><a href="http://wpsupdate.ynxgj.gov.cn:21009/wps_download/index.html" target="_blank" rel="noopener">云南省</a></li>
</ul>
</li>
<li><a href="http://www.ffcell.com" target="_blank" rel="noopener">方方格子</a></li>
<li><a href="https://www.islide.cc" target="_blank" rel="noopener">iSlide</a> 基于PowerPoint的插件工具</li>
<li><a href="http://www.cnblogs.com/Charltsing/p/DNATools.html" target="_blank" rel="noopener">DNAtools for Excel</a> Excel工具箱</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>macOS</title>
    <url>/2019/12/23/macOS/</url>
    <content><![CDATA[<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><ul>
<li><a href="https://www.naodai.org/" target="_blank" rel="noopener">脑袋瓜子</a></li>
<li><a href="https://inmac.org/" target="_blank" rel="noopener">InMac</a> TNT 邀请制</li>
<li><a href="http://www.imacapps.net" target="_blank" rel="noopener">iMacApps</a></li>
<li><a href="https://mac-torrent-download.net" target="_blank" rel="noopener">Mac Torrent Download</a></li>
<li><a href="https://cmacapps.com" target="_blank" rel="noopener">Cmacapps</a> </li>
<li><a href="http://www.osxwin.com" target="_blank" rel="noopener">osXWin</a></li>
<li><a href="https://insmac.org" target="_blank" rel="noopener">InsMac</a></li>
<li>Office for Mac <a href="https://docs.microsoft.com/zh-cn/officeupdates/update-history-office-for-mac?redirectSourcePath=%252fzh-cn%252farticle%252foffice-2016-for-mac-%2525E7%25259A%252584%2525E6%25259B%2525B4%2525E6%252596%2525B0%2525E5%25258E%252586%2525E5%25258F%2525B2%2525E8%2525AE%2525B0%2525E5%2525BD%252595-700cab62-0d67-4f23-947b-3686cb1a8eb7" target="_blank" rel="noopener">中文</a> <a href="https://docs.microsoft.com/en-us/officeupdates/update-history-office-for-mac" target="_blank" rel="noopener">英文</a></li>
<li><a href="https://www.macenjoy.co/" target="_blank" rel="noopener">MacEnjoy</a></li>
<li><a href="https://www.inpandora.com" target="_blank" rel="noopener">潘多拉盒子</a></li>
<li><a href="http://free.apprcn.com" target="_blank" rel="noopener">反斗限免</a> Mac、Windows、Android、iOS等平台，以及各种限免资源</li>
<li><a href="http://www.carrotchou.blog" target="_blank" rel="noopener">胡萝卜周</a></li>
<li><a href="https://www.luochenzhimu.com" target="_blank" rel="noopener">落尘之木</a></li>
</ul>
<h3 id="软件推荐文章"><a href="#软件推荐文章" class="headerlink" title="软件推荐文章"></a>软件推荐文章</h3><ul>
<li><a href="https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md" target="_blank" rel="noopener">awesome-mac</a> 各种类别非常好用的 Mac 应用程序、软件以及工具</li>
<li><a href="https://github.com/serhii-londar/open-source-mac-os-apps" target="_blank" rel="noopener">open-source-mac-os-apps</a></li>
</ul>
<h3 id="视频播放"><a href="#视频播放" class="headerlink" title="视频播放"></a>视频播放</h3><ul>
<li><a href="https://github.com/lhc70000/iina" target="_blank" rel="noopener">IINA</a> 颜值和功能兼顾的开源播放器，使用了 mpv 作为自己的播放内核，支持几乎所有常用媒体的播放（甚至是 GIF），支持 Touch Bar、 Force Touch 和字幕自动下载。 <a href="https://lhc70000.github.io/iina/zh-cn/" target="_blank" rel="noopener">下载</a></li>
<li><a href="https://www.sodaplayer.com/" target="_blank" rel="noopener">Soda Player</a> 能够直接播放种子、磁力链接、在线视频、自动获取字幕、链接和本地视频文件的播放器</li>
<li><a href="https://www.splayer.org" target="_blank" rel="noopener">射手影音播放器</a> <a href="https://github.com/chiflix/splayerx" target="_blank" rel="noopener">GitHub</a></li>
</ul>
<h3 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h3><ul>
<li><a href="https://github.com/ddddxxx/LyricsX" target="_blank" rel="noopener">LyricsX</a> 一款功能完备的歌词工具,显示歌词的免费应用，支持 iTunes、Spotify 和 Vox，自动匹配和下载歌词，在桌面和菜单栏显示歌词。歌词源支持网易云音乐、QQ 音乐、虾米、酷狗等。 <a href="https://itunes.apple.com/us/app/lyricsx/id1254743014?mt=12" target="_blank" rel="noopener">下载</a></li>
<li><a href="http://listen1.github.io/listen1/" target="_blank" rel="noopener">Listen 1 音乐播放器</a> 可以搜索和播放来自网易云音乐，虾米，QQ音乐，酷狗音乐，酷我音乐网站的歌曲，让你的曲库更全面。</li>
</ul>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><ul>
<li><a href="https://apps.apple.com/cn/app/ishot-%E6%88%AA%E5%9B%BE-%E9%95%BF%E6%88%AA%E5%9B%BE-%E8%B4%B4%E5%9B%BE-%E5%BD%95%E5%B1%8F%E5%B7%A5%E5%85%B7/id1485844094" target="_blank" rel="noopener">iShot-截图、长截图、贴图、录屏工具</a></li>
<li><a href="http://xnipapp.com/" target="_blank" rel="noopener">Xnip</a> 免费好用的滚动截屏利器</li>
<li><a href="http://www.cockos.com/licecap/" target="_blank" rel="noopener">Licecap</a> 屏幕录制工具输出GIF</li>
<li><a href="https://imageoptim.com" target="_blank" rel="noopener">ImageOptim</a> 图片压缩</li>
<li><a href="https://github.com/kyleduo/TinyPNG4Mac" target="_blank" rel="noopener">TinyPNG4Mac</a> <a href="https://tinypng.com" target="_blank" rel="noopener">TinyPNG</a> 是一个专注 png 图片压缩的网站，平均压缩比例能达到70%，同时对于图片质量的损失几乎为 0 。TinyPNG4Mac 是 TinyPNG 服务的 Mac 客户端。首次使用需要到 TinyPNG 申请一个秘钥，需要填个邮箱和用户名即可，秘钥会自动发到邮箱。<a href="https://github.com/kyleduo/TinyPNG4Mac/releases" target="_blank" rel="noopener">下载</a></li>
<li><a href="https://www.snipaste.com" target="_blank" rel="noopener">snipaste</a> 截图软件</li>
</ul>
<h3 id="文本编辑"><a href="#文本编辑" class="headerlink" title="文本编辑"></a>文本编辑</h3><ul>
<li><a href="https://github.com/textmate/textmate" target="_blank" rel="noopener">textmate</a> 开源文本编辑</li>
</ul>
<h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><ul>
<li><a href="https://github.com/MacDownApp/macdown" target="_blank" rel="noopener">MacDown</a> 开源 Markdown 编辑</li>
<li><a href="https://typora.io" target="_blank" rel="noopener">Typora</a> 极简 Markdown 编辑器</li>
<li><a href="https://github.com/marktext/marktext/" target="_blank" rel="noopener">Mark Text</a> 会发光的Markdown编辑器</li>
</ul>
<h3 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h3><ul>
<li><a href="https://apps.apple.com/cn/app/%E8%B6%85%E7%BA%A7%E5%8F%B3%E9%94%AE-irightmouse/id1497428978" target="_blank" rel="noopener">超级右键-iRightMouse</a></li>
<li><a href="https://github.com/waylybaye/XcodeCleaner" target="_blank" rel="noopener">Cleaner for Xcode</a> Xcode 的清理工具</li>
<li><a href="https://coretunnel.app/" target="_blank" rel="noopener">Core Tunnel</a> SSH隧道管理工具</li>
<li><a href="https://zipzapmac.com/Go2Shell" target="_blank" rel="noopener">Go2Shell</a> 当前路径打开终端</li>
<li><a href="https://github.com/HansonStudio/PathToGo" target="_blank" rel="noopener">PathToGo</a> copy 文件/文件夹路径</li>
<li><a href="https://github.com/el1t/uBlock-Safari" target="_blank" rel="noopener">uBlock Origin</a> Safari 扩展，用来拦截广告净化网页内容，包含大量的可更新规则，支持规则自定义。 <a href="https://github.com/el1t/uBlock-Safari/releases" target="_blank" rel="noopener">下载</a></li>
<li><a href="https://github.com/eczarny/spectacle" target="_blank" rel="noopener">Spectacle</a> 窗口布局工具,通过快捷键完成窗口的迅速布局，支持上下左右中间全屏半屏四分之一屏等多种形式，帮你提高桌面空间利用率和窗口管理效率。 <a href="https://www.spectacleapp.com/" target="_blank" rel="noopener">下载</a></li>
<li><a href="http://www.admflt.com" target="_blank" rel="noopener">ADM阿呆猫</a> 广告过滤</li>
<li><a href="https://mediaatelier.com/CheatSheet/" target="_blank" rel="noopener">CheatSheet</a> App 快捷方式查看</li>
<li><a href="https://github.com/ganeshrvel/openmtp" target="_blank" rel="noopener">OpenMTP</a> macOS 上管理安卓文件</li>
<li><a href="https://github.com/ntfstool/ntfstool" target="_blank" rel="noopener">ntfstool</a> 为苹果电脑提供NTFS读写支持的一款免费软件</li>
</ul>
<h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><ul>
<li><a href="https://ezip.awehunt.com/" target="_blank" rel="noopener">eZip</a> 国人开发的永久免费的解压缩软件</li>
<li><a href="https://theunarchiver.com" target="_blank" rel="noopener">The Unarchiver</a> 解压缩软件</li>
<li><a href="https://www.keka.io/zh-cn/" target="_blank" rel="noopener">keka</a> 免费解压缩软件</li>
</ul>
<h3 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h3><ul>
<li><a href="https://github.com/rime/squirrel" target="_blank" rel="noopener">鼠须管（Squirrel）</a> 一个 Mac 平台的输入法，它基于 RIME／中州韵输入法引擎，支持朙月拼音、仓颉五代、五笔86、粤拼、吴语、中古全拼／三拼、国际音标输入法及 emoji 表情等几乎所有音码和形码输入法。 <a href="http://rime.im/" target="_blank" rel="noopener">下载</a></li>
<li><a href="https://github.com/utatti/kawa" target="_blank" rel="noopener">Kawa</a> 给每个输入法定义一个快捷键,适合安装了多个输入法的用户，给每个输入法定义一个快捷键，一键切换输入法。</li>
</ul>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li><a href="http://neatdownloadmanager.com" target="_blank" rel="noopener">NeatDownloadManager</a> a free Internet Download Manager for macOS (OS X 10.10  or higher) and Windows (Windows 7 or higher), File only 800 KB!</li>
<li><a href="https://github.com/yangshun1029/aria2gui" target="_blank" rel="noopener">Aria2GUI</a> Aria2 是一个命令行下轻量级、多协议、多来源的下载工具（支持 HTTP/HTTPS、FTP、BitTorrent、Metalink），内建 XML-RPC 和 JSON-RPC 用户界面。Aria2GUI 是集成 aria2c 的可视化下载客户端，Safari 直接下载还需要配合 Safari2aria 使用。 <a href="https://github.com/yangshun1029/aria2gui/releases" target="_blank" rel="noopener">下载</a></li>
<li><a href="https://github.com/alanzhangzm/Photon" target="_blank" rel="noopener">Photon</a> 磁力链和BT种子下载工具 基于<a href="https://github.com/aria2/aria2" target="_blank" rel="noopener">aria2</a></li>
<li><a href="https://github.com/agalwood/Motrix" target="_blank" rel="noopener">Motrix</a> 一款全能的下载工具，支持下载 HTTP、FTP、BT、磁力链、百度网盘等资源。</li>
</ul>
<h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><ul>
<li><a href="https://github.com/OpenEmu/OpenEmu" target="_blank" rel="noopener">OpenEmu</a> Mac 上游戏模拟器合集</li>
<li><a href="https://www.mamedev.org/" target="_blank" rel="noopener">MAME</a> 街机模拟器 <a href="https://github.com/mamedev/mame" target="_blank" rel="noopener">GitHub</a></li>
<li><a href="http://www.retroarch.com/" target="_blank" rel="noopener">RetroArch</a> 跨平台模拟器</li>
<li><a href="https://batocera.org/" target="_blank" rel="noopener">Batocera.linux</a> an operating system (like Windows 10 and Mac OS) specialized in retrogaming available for your pc and different nano computers like the Raspberry and the Odroids</li>
</ul>
<h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><ul>
<li><a href="https://github.com/zxhm001/DataDraw" target="_blank" rel="noopener">数字绘</a> 一款开源可以绘制线框图、流程图、网络图、组织结构图、UML、BPMN 等各种图表的在线工具</li>
<li><a href="https://www.diagrams.net/" target="_blank" rel="noopener">Diagram</a> 对应 GitHub 仓库 <a href="https://github.com/jgraph/drawio" target="_blank" rel="noopener">drawio</a>，流程图</li>
<li><a href="https://www.processon.com/" target="_blank" rel="noopener">ProcessOn</a></li>
<li><a href="https://mubu.com" target="_blank" rel="noopener">幕布</a> 在线思维导图</li>
</ul>
<h3 id="开发相关"><a href="#开发相关" class="headerlink" title="开发相关"></a>开发相关</h3><h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h4><ul>
<li><a href="https://gogs.io/" target="_blank" rel="noopener">Gogs</a> 一款极易搭建的自助 Git 服务</li>
<li><a href="https://www.sourcetreeapp.com" target="_blank" rel="noopener">Sourcetree</a>    Git GUI</li>
<li><a href="https://gitlab.com" target="_blank" rel="noopener">GitLab</a> 开源仓库管理系统</li>
</ul>
<h4 id="代码评审"><a href="#代码评审" class="headerlink" title="代码评审"></a>代码评审</h4><ul>
<li><a href="https://www.gerritcodereview.com/" target="_blank" rel="noopener">Gerrit</a>  免费、开放源代码的代码审查软件</li>
</ul>
<h4 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h4><ul>
<li><p><a href="https://proxyman.io/" target="_blank" rel="noopener">Proxyman</a> 代理抓包工具，和 Charles 类似，免费版缺少书签功能，但是包含了抓包调试所有功能</p>
</li>
<li><p><a href="https://www.wireshark.org" target="_blank" rel="noopener">wireshark</a> 网络分析</p>
</li>
<li><p><a href="https://www.getpostman.com" target="_blank" rel="noopener">Postman</a> 网络调试</p>
</li>
<li><p><a href="https://www.charlesproxy.com/" target="_blank" rel="noopener">Charles 官网</a> <a href="https://www.charlesproxy.com/download/" target="_blank" rel="noopener">下载</a> <a href="https://github.com/8enet/Charles-Crack" target="_blank" rel="noopener">破解工具</a> 或者直接使用下方激活码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Registered Name: https:&#x2F;&#x2F;zhile.io</span><br><span class="line">License Key: 48891cf209c6d32bf4</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><ul>
<li>json editor <a href="https://www.osxwin.com/s/json-editor" target="_blank" rel="noopener">下载</a>：JSON 编辑器</li>
<li>Paste 一款剪贴板工具</li>
<li>DaisyDisk 查看磁盘空间分布</li>
<li><a href="https://www.omnigroup.com/more" target="_blank" rel="noopener">OmniDiskSweeper</a> 免费的查看磁盘空间分布</li>
</ul>
<h4 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h4><ul>
<li><a href="https://lookin.work/" target="_blank" rel="noopener">Lookin</a> 免费好用的 iOS UI 调试软件</li>
</ul>
<h4 id="Sketch"><a href="#Sketch" class="headerlink" title="Sketch"></a>Sketch</h4><ul>
<li><a href="https://github.com/cute/SketchI18N" target="_blank" rel="noopener">SketchI18N</a> Sketch 的多语言（简体中文、繁体中文、日语）显示插件，让 Sketch 显示中文界面。 <a href="https://github.com/cute/SketchI18N/archive/master.zip" target="_blank" rel="noopener">下载</a></li>
</ul>
<h4 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h4><ul>
<li><a href="https://code.visualstudio.com" target="_blank" rel="noopener">Visual Studio Code</a> 代码编辑</li>
</ul>
<h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><ul>
<li><a href="https://github.com/insidegui/WWDC" target="_blank" rel="noopener">WWDC</a> Mac OS的非官方的WWDC APP</li>
</ul>
<h2 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h2><ul>
<li><a href="https://crifan.github.io/scientific_network_summary/website/" target="_blank" rel="noopener">科学上网相关知识总结</a><ul>
<li>Mac: <a href="https://github.com/shadowsocks/ShadowsocksX-NG/releases" target="_blank" rel="noopener">ShadowsocksX-NG</a> </li>
<li>Windows：<a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">shadowsocks-windows</a></li>
<li>Android：<a href="https://github.com/shadowsocks/shadowsocks-android/releases" target="_blank" rel="noopener">shadowsocks-android</a></li>
<li>iOS：<a href="https://apps.apple.com/us/app/shadowrocket/id932747118" target="_blank" rel="noopener">shadowrocket</a> 大陆不可用</li>
</ul>
</li>
</ul>
<h2 id="command-line"><a href="#command-line" class="headerlink" title="command line"></a>command line</h2><ul>
<li><a href="https://www.iterm2.com" target="_blank" rel="noopener">iTerm2</a> 终端<ul>
<li>设置iTerm2为默认终端<ul>
<li>打开iTerm，在默认菜单中选择 <code>Make iTerm2 Default Term</code></li>
<li>如果使用了 <a href="https://zipzapmac.com/Go2Shell" target="_blank" rel="noopener">Go2Shell</a> 快捷启动的话,设置默认iTerm2，在终端输入如下命令 <code>open -a Go2Shell --args config</code>,回车，选择 <code>iTerm 2</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="Mac无法打开“XXXX”，因为Apple无法检查其是否包含恶意软件-？"><a href="#Mac无法打开“XXXX”，因为Apple无法检查其是否包含恶意软件-？" class="headerlink" title="Mac无法打开“XXXX”，因为Apple无法检查其是否包含恶意软件 ？"></a>Mac无法打开“XXXX”，因为Apple无法检查其是否包含恶意软件 ？</h3><ol>
<li>打开任意来源：打开终端，在终端运行以下指令（需要输入密码）：<code>sudo spctl --master-disable</code></li>
</ol>
<h3 id="macOS-Catalina-10-15-报“已损坏，无法打开”-？"><a href="#macOS-Catalina-10-15-报“已损坏，无法打开”-？" class="headerlink" title="macOS Catalina 10.15 报“已损坏，无法打开” ？"></a>macOS Catalina 10.15 报“已损坏，无法打开” ？</h3><ol>
<li><p>打开任意来源：打开终端，在终端运行以下指令（需要输入密码）：<code>sudo spctl --master-disable</code></p>
</li>
<li><p>如需关闭任意来源：打开终端，在终端运行以下指令（需要输入密码）：<code>sudo spctl --master-enable</code></p>
</li>
<li><p>终端输入以下命令（将xxxx替换为App名字）</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 实质是删除扩展属性中的“下载”，这样Mac就不会将这个软件视为从网上down下来的</span><br><span class="line">sudo xattr -d com.apple.quarantine &#x2F;Applications&#x2F;xxxx.app</span><br></pre></td></tr></table></figure>

<p>  回车后，输入Mac锁屏密码，回车确认即可。</p>
</li>
</ol>
<h3 id="以隐身模式打开-Chrome-浏览器？"><a href="#以隐身模式打开-Chrome-浏览器？" class="headerlink" title="以隐身模式打开 Chrome 浏览器？"></a>以隐身模式打开 Chrome 浏览器？</h3><p>打开脚步编辑器，新建编辑器，不同浏览器输入以下内容，再保存，点击脚本即可以隐身模式打开对应浏览器</p>
<p>Chrome:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">do shell script &quot;open -a &#x2F;Applications&#x2F;Google\\ Chrome.app --args --incognito&quot;</span><br><span class="line">tell application &quot;Google Chrome&quot;</span><br><span class="line">	make new window with properties &#123;mode:&quot;incognito&quot;&#125;</span><br><span class="line">	activate</span><br><span class="line">end tell</span><br></pre></td></tr></table></figure>

<p>Microsoft Edge:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">do shell script &quot;open -a &#x2F;Applications&#x2F;Microsoft\\ Edge.app --args --incognito&quot;</span><br><span class="line">tell application &quot;Microsoft Edge&quot;</span><br><span class="line">	make new window with properties &#123;mode:&quot;incognito&quot;&#125;</span><br><span class="line">	activate</span><br><span class="line">end tell</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>macOS</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>Next</title>
    <url>/2019/12/02/Next/</url>
    <content><![CDATA[<h1 id="Next-个性化"><a href="#Next-个性化" class="headerlink" title="Next 个性化"></a><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">Next</a> 个性化</h1><h2 id="next主题侧边栏优化"><a href="#next主题侧边栏优化" class="headerlink" title="next主题侧边栏优化"></a>next主题侧边栏优化</h2><h3 id="站内搜索功能的实现"><a href="#站内搜索功能的实现" class="headerlink" title="站内搜索功能的实现"></a>站内搜索功能的实现</h3><p>文章写多了，想一篇篇的去寻找可不容易，这时候，我们便需要一个站内的搜索功能，即服务别人，也能方便自己。<br>首先，我们在终端进入blog的根目录下，执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>接着，我们进入站点配置文件 <code>_config.yml</code>,在最后新增以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>
<p>最后，打开主题配置文件 <code>_config.yml</code>,搜索 <code>local_search</code>,其值改为 <code>true</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<h3 id="添加标签页"><a href="#添加标签页" class="headerlink" title="添加标签页"></a>添加标签页</h3><h4 id="主题页配置打开-tags"><a href="#主题页配置打开-tags" class="headerlink" title="主题页配置打开 tags"></a>主题页配置打开 tags</h4><p>打开主题配置文件 <code>_config.yml</code>,搜索 <code>#tags: /tags/ || tags</code>, 改为 <code>tags: /tags/ || tags</code>，这样侧边栏就会出现：<code>tags</code>（中文环境下会是：标签）</p>
<h4 id="生成“标签”页并添加tpye属性"><a href="#生成“标签”页并添加tpye属性" class="headerlink" title="生成“标签”页并添加tpye属性"></a>生成“标签”页并添加tpye属性</h4><p>打开命令行，进入博客所在文件夹。执行命令：<code>hexo new page tags</code></p>
<p>成功后会提示：<code>INFO  Created: ~/Documents/blog/source/tags/index.md</code></p>
<p>根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2019-12-25 23:31:03</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>添加 <code>type: &quot;tags&quot;</code> 到内容中，添加后是这样的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2019-12-25 23:31:03</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>保存并关闭文件。</p>
<h4 id="给文章添加-tags-属性"><a href="#给文章添加-tags-属性" class="headerlink" title="给文章添加 tags 属性"></a>给文章添加 <code>tags</code> 属性</h4><p>打开需要添加标签的文章，为其添加 <code>tags</code>属性。下面的例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: iOS 开发指南</span><br><span class="line">date: 2019-12-25 23:34:35</span><br><span class="line"></span><br><span class="line">tags: [iOS, 开发，指南]</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>为标题为 <code>iOS 开发指南</code> 的文章添加了：<code>iOS</code>、<code>开发</code>、<code>指南</code> 三个 tag</p>
<h2 id="next主题主页面优化"><a href="#next主题主页面优化" class="headerlink" title="next主题主页面优化"></a>next主题主页面优化</h2><h3 id="增加fork-me-on-github-图标"><a href="#增加fork-me-on-github-图标" class="headerlink" title="增加fork me on github 图标"></a>增加fork me on github 图标</h3><p>在<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">这里</a>(图片版)或<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">这里</a>(文字版)选择一款自己喜欢的图标，然后把图标旁的代码拷贝一份</p>
<ul>
<li>放到 <code>blog/themes/next/layout/_layout.swig</code> 这个文件夹中，</li>
<li>注意要放到 <code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code> 的下方</li>
</ul>
<h3 id="为文章内容添加统计功能，文字总数-阅读时长"><a href="#为文章内容添加统计功能，文字总数-阅读时长" class="headerlink" title="为文章内容添加统计功能，文字总数+阅读时长"></a>为文章内容添加统计功能，文字总数+阅读时长</h3><p>这个功能在next主题中已经存在了，我们只需要打开开关就行，具体步骤分为下面三步：</p>
<ol>
<li>终端进入blog根目录，执行下面代码：<code>npm install hexo-symbols-count-time --save</code></li>
<li>进入站点配置文件，为blog配置统计功能，将以下代码复制到最后：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>进入主题配置文件，搜素 <code>symbols_count_time</code>,然后把要显示的改为true.<br>更深入的操作大家可以看github上的<a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">说明</a></li>
</ol>
<h2 id="next主题底部优化"><a href="#next主题底部优化" class="headerlink" title="next主题底部优化"></a>next主题底部优化</h2><h3 id="增加本站运行时间"><a href="#增加本站运行时间" class="headerlink" title="增加本站运行时间"></a>增加本站运行时间</h3><p>进入 <code>/blog/themes/next/layout/_partials/footer.swig</code> 文件，在文件合适的地方放上如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;days&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">function show_date_time()&#123;</span><br><span class="line">    window.setTimeout(&quot;show_date_time()&quot;, 1000);</span><br><span class="line">    BirthDay&#x3D;new Date(&quot;04&#x2F;17&#x2F;2018 15:13:14&quot;);&#x2F;&#x2F;修改为自己的blog建站时间</span><br><span class="line">    today&#x3D;new Date();</span><br><span class="line">    timeold&#x3D;(today.getTime()-BirthDay.getTime());</span><br><span class="line">    sectimeold&#x3D;timeold&#x2F;1000</span><br><span class="line">    secondsold&#x3D;Math.floor(sectimeold);</span><br><span class="line">    msPerDay&#x3D;24*60*60*1000</span><br><span class="line">    e_daysold&#x3D;timeold&#x2F;msPerDay</span><br><span class="line">    daysold&#x3D;Math.floor(e_daysold);</span><br><span class="line">    e_hrsold&#x3D;(e_daysold-daysold)*24;</span><br><span class="line">    hrsold&#x3D;setzero(Math.floor(e_hrsold));</span><br><span class="line">    e_minsold&#x3D;(e_hrsold-hrsold)*60;</span><br><span class="line">    minsold&#x3D;setzero(Math.floor((e_hrsold-hrsold)*60));</span><br><span class="line">    seconds&#x3D;setzero(Math.floor((e_minsold-minsold)*60));</span><br><span class="line">    document.getElementById(&#39;days&#39;).innerHTML&#x3D;&quot;本站已安全运行&quot;+daysold+&quot;天&quot;+hrsold+&quot;小时&quot;+minsold+&quot;分&quot;+seconds+&quot;秒&quot;;</span><br><span class="line">&#125;</span><br><span class="line">function setzero(i)&#123;</span><br><span class="line">    if (i&lt;10)</span><br><span class="line">    &#123;i&#x3D;&quot;0&quot; + i&#125;;</span><br><span class="line">    return i;</span><br><span class="line">&#125;</span><br><span class="line">show_date_time();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>如我是在原next主题版本信息的下方增加上面的代码，代码在不同的位置会有不同的效果</p>
<h3 id="增加站点访问人数和总访问量"><a href="#增加站点访问人数和总访问量" class="headerlink" title="增加站点访问人数和总访问量"></a>增加站点访问人数和总访问量</h3><p>打开主题配置文件，搜索busuanzi，将enable的值改为true即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: eye</span><br></pre></td></tr></table></figure>


<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="1-本地预览跟-GitHub-Page-看到的效果不一样？"><a href="#1-本地预览跟-GitHub-Page-看到的效果不一样？" class="headerlink" title="1. 本地预览跟 GitHub Page 看到的效果不一样？"></a>1. 本地预览跟 GitHub Page 看到的效果不一样？</h3><p>删除 blog 根目录的 <code>public</code>、<code>.deploy_git</code> 再重新生成试试？</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="http://eternalzttz.com/hexo-next.html" target="_blank" rel="noopener">hexo next主题优化，打造个人精致网站</a></li>
<li><a href="http://shenzekun.cn/hexo的next主题个性化配置教程.html" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 部署到 GitHub Page</title>
    <url>/2019/11/24/Hexo/</url>
    <content><![CDATA[<h2 id="Mac-安装-Hexo"><a href="#Mac-安装-Hexo" class="headerlink" title="Mac 安装 Hexo"></a>Mac 安装 Hexo</h2><ol>
<li><a href="https://brew.sh" target="_blank" rel="noopener">homebrew</a><ul>
<li>终端执行：<code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></li>
<li>验证是否成功：<code>brew -v</code></li>
</ul>
</li>
<li><a href="https://git-scm.com" target="_blank" rel="noopener">git</a>，由于 Mac 自带 Git，一般就不需要安装了</li>
<li><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">node</a><ul>
<li>使用 brew 安装：<code>brew install -g node</code></li>
<li><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">官网下载</a> pkg 安装。安装后不生效？重启系统试试！</li>
<li>验证是否成功：<code>node -v</code> 、<code>npm -v</code></li>
</ul>
</li>
<li>安装 Hexo：<ul>
<li>使用 Node:<code>npm install hexo-cli -g</code></li>
<li>验证是否成功：<code>hexo -v</code></li>
</ul>
</li>
<li>可参考<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">官网</a> <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">文档</a></li>
</ol>
<h2 id="创建-Hexo-项目"><a href="#创建-Hexo-项目" class="headerlink" title="创建 Hexo 项目"></a>创建 Hexo 项目</h2><p>如无特殊说明，以下操作均在终端中执行命令行：</p>
<ol>
<li>创建一个空文件夹，比如路径如下：<code>~/Downloads/Blog</code></li>
<li>打开终端，cd 到此路径下：<code>cd ~/Downloads/Blog</code></li>
<li>执行 <code>hexo init</code> 初始化项目，接着输入 <code>npm install</code> 安装必备的组件</li>
<li>执行 <code>hexo g</code>生成静态网页</li>
<li>执行 <code>hexo s</code>打开本地服务器，然后浏览器打开<code>http://localhost:4000/</code>，就可以看到静态网页效果</li>
<li>执行 <code>ctrl+c</code> 关闭本地服务器</li>
</ol>
<h2 id="创建-GitHub-Page"><a href="#创建-GitHub-Page" class="headerlink" title="创建 GitHub Page"></a>创建 GitHub Page</h2><ol>
<li>新建 Git 仓库名称为：<code>yourBlogName.github.io</code>,记得勾选上初始化 <code>README</code>, 其中 <code>yourBlogName</code> 请更改为你想要的 Blog 名称</li>
<li>点击 Git 仓库 <code>Setting</code>,向下拉到最后有个 <code>GitHub Pages</code>，点击 <code>Choose a theme</code>选择一个主题。然后等一会儿，再回到 <code>GitHub Pages</code>,会显示<code>Your site is ready to be published at http:/xxxx/yourBlogName.github.io/.</code></li>
</ol>
<h2 id="Hexo-部署到-GitHub-Page"><a href="#Hexo-部署到-GitHub-Page" class="headerlink" title="Hexo 部署到 GitHub Page"></a>Hexo 部署到 GitHub Page</h2><ol>
<li><p>在 GitHub 中添加本地 SSH key，添加完成后验证是否成功：<code>ssh -T git@github.com</code></p>
</li>
<li><p>Hexo 项目路径 <code>~/Downloads/Blog</code>下，打开文件： <code>_config.yml</code>，修改最后一行的配置</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https:&#x2F;&#x2F;github.com&#x2F;xxx&#x2F;yourBlogName.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>  其中 <code>repository</code> 为 <code>GitHub Page</code>项目地址链接, <code>.git</code> 可加可不加，都是没有问题的</p>
</li>
<li><p>终端 cd 到项目路径后，执行 <code>npm install hexo-deployer-git</code> 安装扩展</p>
</li>
<li><p>终端执行 <code>hexo new post &quot;article title&quot;</code>，新建一篇文章</p>
</li>
<li><p>打开 <code>~/Downloads/Blog\source\_posts</code>的目录，可以发现下面多了一个 <code>.md</code> 文件,编辑改文件文件</p>
</li>
<li><p>执行 <code>hexo g</code> 生成静态网页，执行 <code>hexo s</code> 本地预览效果，最后执行 <code>hexo d</code>上传到 <code>Github Page</code>上。这时打开你的 github.io 主页就能看到发布的文章啦,注意，发布后有一定的延迟。</p>
</li>
</ol>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ol>
<li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo Themse</a> 可找到你想要的主题，推荐 <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">next</a></li>
<li>安装请参考 <a href="https://hexo.io/zh-cn/docs/themes" target="_blank" rel="noopener">官方文档</a></li>
</ol>
<h2 id="常用-Hexo-命令"><a href="#常用-Hexo-命令" class="headerlink" title="常用 Hexo 命令"></a>常用 Hexo 命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 安装Hexo</span><br><span class="line">npm install hexo -g</span><br><span class="line">&#x2F;&#x2F; 升级 </span><br><span class="line">npm update hexo -g </span><br><span class="line">&#x2F;&#x2F; 初始化博客</span><br><span class="line">hexo init </span><br><span class="line"></span><br><span class="line">命令简写</span><br><span class="line">&#x2F;&#x2F; 新建文章： hexo new &quot;我的博客文章&quot; </span><br><span class="line">hexo n &quot;我的博客文章&quot;</span><br><span class="line">&#x2F;&#x2F; 生成静态网页：hexo generate</span><br><span class="line">hexo g</span><br><span class="line">&#x2F;&#x2F; 启动本地服务：hexo server，Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line">hexo s</span><br><span class="line">&#x2F;&#x2F; 部署服务：hexo deploy</span><br><span class="line">hexo d</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 静态模式</span><br><span class="line">hexo server -s</span><br><span class="line">&#x2F;&#x2F; 更改端口</span><br><span class="line">hexo server -p 5000 </span><br><span class="line">&#x2F;&#x2F; 自定义 IP</span><br><span class="line">hexo server -i 192.168.1.1</span><br><span class="line">&#x2F;&#x2F; 清除缓存，若是网页正常情况下可以忽略这条命令</span><br><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol>
<li>在尝试安装 <code>Hexo</code> 的过程中出现 <code>EACCES</code> 权限错误，请遵循 由 npmjs 发布的指导 修复该问题。强烈建议 不要 使用 root、sudo 等方法覆盖权限</li>
<li>在执行 hexo deploy 后,出现 error deployer not found:git 的错误处理，输入 <code>npm install hexo-deployer-git --save</code></li>
</ol>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://zhuanlan.zhihu.com/p/35668237" target="_blank" rel="noopener">超详细Hexo+Github博客搭建小白教程</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">GitHub+Hexo 搭建个人网站详细教程</a></li>
<li><a href="http://eternalzttz.com/hexo-next.html" target="_blank" rel="noopener">hexo next主题优化，打造个人精致网站</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
